<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.WebPages</name>
  </assembly>
  <members>
    <member name="T:System.Web.Helpers.AntiForgery">
      <summary>悪意のあるスクリプトによる偽造ページ要求の送信防止に役立ちます。</summary>
    </member>
    <member name="M:System.Web.Helpers.AntiForgery.GetHtml">
      <summary>要求の偽造を防止するため、認証トークンをフォームに追加します。</summary>
      <returns>隠し HTML フィールドに格納されている暗号化されたトークン値を含む文字列を返します。</returns>
      <exception cref="T:System.ArgumentException">現在の <see cref="T:System.Web.HttpContext" /> オブジェクトは null です。</exception>
    </member>
    <member name="M:System.Web.Helpers.AntiForgery.GetHtml(System.Web.HttpContextBase,System.String,System.String,System.String)">
      <summary>要求の偽造を防止し、呼び出し元が認証の詳細を指定できるよう、認証トークンをフォームに追加します。</summary>
      <returns>隠し HTML フィールドに格納されている暗号化されたトークン値を返します。</returns>
      <param name="httpContext">要求の HTTP コンテキスト データ。</param>
      <param name="salt">暗号化をさらに複雑にして安全性を高めるために使用されるオプションのランダム文字列 (Z*7g1&amp;p4 など)。既定値は null です。</param>
      <param name="domain">要求の送信元である Web アプリケーションのドメイン。</param>
      <param name="path">要求の送信元である Web アプリケーションの仮想ルート パス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> が null です。</exception>
    </member>
    <member name="M:System.Web.Helpers.AntiForgery.GetTokens(System.String,System.String@,System.String@)">
      <summary>検索トークンを取得します。</summary>
      <param name="oldCookieToken">直前の Cookie トークン。</param>
      <param name="newCookieToken">新しい Cookie トークン。</param>
      <param name="formToken">トークンのフォーム。</param>
    </member>
    <member name="M:System.Web.Helpers.AntiForgery.Validate">
      <summary>HTML フォーム フィールドの入力データが、データを送信したユーザーから提供されていることを検証します。</summary>
      <exception cref="T:System.ArgumentException">現在の <see cref="T:System.Web.HttpContext" /> の値は null です。</exception>
      <exception cref="T:System.Web.Helpers.HttpAntiForgeryException">有効な要求に付随する HTTP Cookie トークンが見つかりません。またはフォームのトークンが見つかりません。またはフォームのトークン値が Cookie のトークン値と一致しません。またはフォームのトークン値が Cookie のトークン値と一致しません。</exception>
    </member>
    <member name="M:System.Web.Helpers.AntiForgery.Validate(System.String,System.String)">
      <summary>HTML フォーム フィールドの入力データが、データを送信したユーザーから提供されていることを検証します。</summary>
      <param name="cookieToken">Cookie トークンの値。</param>
      <param name="formToken">トークン フォーム。</param>
    </member>
    <member name="M:System.Web.Helpers.AntiForgery.Validate(System.Web.HttpContextBase,System.String)">
      <summary>HTML フォーム フィールドの入力データが、データを送信したユーザーから提供されていることを検証し、呼び出し元が追加の検証の詳細を指定できるようにします。</summary>
      <param name="httpContext">要求の HTTP コンテキスト データ。</param>
      <param name="salt">
        <see cref="T:System.Web.Helpers.AntiForgery" /> クラスによって作成された認証トークンの暗号化に使用されるオプションのランダム文字列 (Z*7g1&amp;p4 など)。既定値は null です。</param>
      <exception cref="T:System.ArgumentException">現在の <see cref="T:System.Web.HttpContext" /> の値は null です。</exception>
      <exception cref="T:System.Web.Helpers.HttpAntiForgeryException">有効な要求に付随する HTTP Cookie トークンが見つかりません。またはフォームのトークンが見つかりません。またはフォームのトークン値が Cookie のトークン値と一致しません。またはフォームのトークン値が Cookie のトークン値と一致しません。または提供された <paramref name="salt" /> 値が、フォーム トークンの作成に使用された <paramref name="salt" /> 値と一致しません。</exception>
    </member>
    <member name="T:System.Web.Helpers.AntiForgeryConfig">
      <summary>偽造防止トークン システムに対するプログラムによる構成を提供します。</summary>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.AdditionalDataProvider">
      <summary>生成されたすべてのトークンに格納する追加のデータを提供し、受信トークンの追加のデータを検証できるデータ プロバイダーを取得します。</summary>
      <returns>データ プロバイダー。</returns>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.CookieName">
      <summary>偽造防止システムによって使用される Cookie の名前を取得または設定します。</summary>
      <returns>Cookie 名。</returns>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.RequireSsl">
      <summary>偽造防止 Cookie がサーバーに返されるために SSL を必要とするかどうかを示す値を取得または設定します。</summary>
      <returns>偽造防止 Cookie がサーバーに返されるために SSL が必要な場合は true、それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.SuppressIdentityHeuristicChecks">
      <summary>偽造防止システムが、システムの誤用を示す可能性がある状態の確認をスキップする必要があるかどうかを示す値を取得または設定します。</summary>
      <returns>偽造防止システムが誤用の可能性のチェックを行う必要がない場合は true、それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.SuppressXFrameOptionsHeader">
      <summary>ClickJacking の防止に使用される X-Frame-Options ヘッダーの生成を抑制するかどうかを指定します。既定では、X-Frame-Options ヘッダーは値 SAMEORIGIN を使用して生成されます。この設定が "true" である場合、応答に対して X-Frame-Options ヘッダーは生成されません。</summary>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.UniqueClaimTypeIdentifier">
      <summary>要求ベースの認証が使用される場合は、ユーザーを一意に識別するために使用される ID から要求の種類を取得または設定します。</summary>
      <returns>要求の種類。</returns>
    </member>
    <member name="T:System.Web.Helpers.IAntiForgeryAdditionalDataProvider">
      <summary>偽造防止トークンのカスタム データを含める方法および検証する方法を提供します。</summary>
    </member>
    <member name="M:System.Web.Helpers.IAntiForgeryAdditionalDataProvider.GetAdditionalData(System.Web.HttpContextBase)">
      <summary>この要求の際に生成される偽造防止トークンに対して格納する追加データを提供します。</summary>
      <returns>偽造防止トークンに埋め込む補足データ。</returns>
      <param name="context">現在の要求に関する情報。</param>
    </member>
    <member name="M:System.Web.Helpers.IAntiForgeryAdditionalDataProvider.ValidateAdditionalData(System.Web.HttpContextBase,System.String)">
      <summary>受信した偽造防止トークン内に埋め込まれた追加データを検証します。</summary>
      <returns>データが有効である場合は true、データが無効である場合は false。</returns>
      <param name="context">現在の要求に関する情報。</param>
      <param name="additionalData">トークンに埋め込まれた補足データ。</param>
    </member>
    <member name="T:System.Web.Helpers.UnvalidatedRequestValues">
      <summary>
        <see cref="T:System.Web.HttpRequest" /> オブジェクトの未検証のフォーム値へのアクセスを提供します。</summary>
    </member>
    <member name="P:System.Web.Helpers.UnvalidatedRequestValues.Form">
      <summary>ブラウザーからポストされた、未検証のフォーム値のコレクションを取得します。</summary>
      <returns>未検証のフォーム値のコレクション。</returns>
    </member>
    <member name="P:System.Web.Helpers.UnvalidatedRequestValues.Item(System.String)">
      <summary>
        <see cref="T:System.Web.HttpRequest" /> オブジェクトのポストされた値のコレクションから、指定された未検証のオブジェクトを取得します。</summary>
      <returns>指定されたメンバー。指定された項目が見つからない場合は null。</returns>
    </member>
    <member name="P:System.Web.Helpers.UnvalidatedRequestValues.QueryString">
      <summary>未検証のクエリ文字列値のコレクションを取得します。</summary>
      <returns>未検証のクエリ文字列値のコレクション。</returns>
    </member>
    <member name="T:System.Web.Helpers.Validation">
      <summary>Request オブジェクトのフィールドを、安全でない可能性がある HTML マークアップとクライアント スクリプトのチェック対象から除外します。</summary>
    </member>
    <member name="M:System.Web.Helpers.Validation.Unvalidated(System.Web.HttpRequest)">
      <summary>あるバージョンのフォームの値、Cookie、およびクエリ文字列の変数を、最初に HTML マークアップとクライアント スクリプトのチェックを行わずに返します。</summary>
      <returns>未検証バージョンのフォームとクエリ文字列の値が格納されているオブジェクト。</returns>
      <param name="request">要求の検証対象から除外する値を格納する <see cref="T:System.Web.HttpRequest" /> オブジェクト。</param>
    </member>
    <member name="M:System.Web.Helpers.Validation.Unvalidated(System.Web.HttpRequest,System.String)">
      <summary>指定されたフォーム フィールド、Cookie、またはクエリ文字列の変数の値を、最初に HTML マークアップとクライアント スクリプトのチェックを行わずに返します。</summary>
      <returns>指定されたフィールド、Cookie、またはクエリ文字列値の検証されていないテキストを含む文字列。</returns>
      <param name="request">検証対象から除外する値を格納する <see cref="T:System.Web.HttpRequest" /> オブジェクト。</param>
      <param name="key">検証から除外するフィールドの名前。<paramref name="key" /> から、フォーム フィールド、Cookie、またはクエリ文字列変数を参照できます。</param>
    </member>
    <member name="M:System.Web.Helpers.Validation.Unvalidated(System.Web.HttpRequestBase)">
      <summary>Request オブジェクトのすべての値 (フィールド、Cookie、およびクエリ文字列を含む) を、最初に HTML マークアップとクライアント スクリプトのチェックを行わずに返します。</summary>
      <returns>未検証バージョンのフォーム、Cookie、およびクエリ文字列の値が格納されているオブジェクト。</returns>
      <param name="request">検証対象から除外する値を格納する <see cref="T:System.Web.HttpRequest" /> オブジェクト。</param>
    </member>
    <member name="M:System.Web.Helpers.Validation.Unvalidated(System.Web.HttpRequestBase,System.String)">
      <summary>Request オブジェクトの指定された値を、最初に HTML マークアップとクライアント スクリプトのチェックを行わずに返します。</summary>
      <returns>指定されたフィールド、Cookie、またはクエリ文字列値の検証されていないテキストを含む文字列。</returns>
      <param name="request">検証対象から除外する値を格納する <see cref="T:System.Web.HttpRequestBase" /> オブジェクト。</param>
      <param name="key">検証から除外するフィールドの名前。<paramref name="key" /> から、フォーム フィールド、Cookie、またはクエリ文字列変数を参照できます。</param>
    </member>
    <member name="T:System.Web.Mvc.HttpAntiForgeryException">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpAntiForgeryException.#ctor">
      <summary>このメンバーは .NET Framework インフラストラクチャをサポートします。コードから直接使用するためのものではありません。<see cref="T:System.Web.Mvc.HttpAntiForgeryException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpAntiForgeryException.#ctor(System.String)">
      <summary>このメンバーは .NET Framework インフラストラクチャをサポートします。コードから直接使用するためのものではありません。<see cref="T:System.Web.Mvc.HttpAntiForgeryException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">内容があるメッセージ。</param>
    </member>
    <member name="M:System.Web.Mvc.HttpAntiForgeryException.#ctor(System.String,System.Exception)">
      <summary>このメンバーは .NET Framework インフラストラクチャをサポートします。コードから直接使用するためのものではありません。<see cref="T:System.Web.Mvc.HttpAntiForgeryException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">メッセージ。</param>
      <param name="innerException">内部例外。</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationEqualToRule">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationEqualToRule.#ctor(System.String,System.Object)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="errorMessage">エラー メッセージ。</param>
      <param name="other">その他。</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationMaxLengthRule"></member>
    <member name="M:System.Web.Mvc.ModelClientValidationMaxLengthRule.#ctor(System.String,System.Int32)"></member>
    <member name="T:System.Web.Mvc.ModelClientValidationMinLengthRule"></member>
    <member name="M:System.Web.Mvc.ModelClientValidationMinLengthRule.#ctor(System.String,System.Int32)"></member>
    <member name="T:System.Web.Mvc.ModelClientValidationRangeRule">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRangeRule.#ctor(System.String,System.Object,System.Object)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="errorMessage">エラー メッセージ。</param>
      <param name="minValue">最小値。</param>
      <param name="maxValue">最大値。</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRegexRule">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRegexRule.#ctor(System.String,System.String)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。<see cref="T:System.Web.Mvc.ModelClientValidationRegexRule" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="errorMessage">例外メッセージ。</param>
      <param name="pattern">パターン。</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRemoteRule">
      <summary>モデル クライアントの検証に関するリモート規則を表します。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRemoteRule.#ctor(System.String,System.String,System.String,System.String)">
      <summary>
        <see cref="T:System.Web.Mvc.ModelClientValidationRemoteRule" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="errorMessage">エラー メッセージ。</param>
      <param name="url">規則の URL。</param>
      <param name="httpMethod">HTTP メソッド。</param>
      <param name="additionalFields">使用される追加のフィールド。</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRequiredRule">
      <summary>モデル クライアントの検証に必要な規則を表します。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRequiredRule.#ctor(System.String)">
      <summary>
        <see cref="T:System.Web.Mvc.ModelClientValidationRequiredRule" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="errorMessage">エラー メッセージ。 </param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRule">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRule.#ctor">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelClientValidationRule.ErrorMessage">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelClientValidationRule.ValidationParameters">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelClientValidationRule.ValidationType">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationStringLengthRule">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。モデル クライアントの検証規則の長さを表します。</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationStringLengthRule.#ctor(System.String,System.Int32,System.Int32)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。<see cref="T:System.Web.Mvc.ModelClientValidationStringLengthRule" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="errorMessage">エラー メッセージ。</param>
      <param name="minimumLength">検証規則の最小長。</param>
      <param name="maximumLength">検証規則の最大長。</param>
    </member>
    <member name="T:System.Web.Mvc.TagBuilder">
      <summary>HTML 要素を作成するために使用するクラスとプロパティが含まれます。このクラスは、<see cref="N:System.Web.Helpers" />名前空間に含まれるようなヘルパーを記述するために使用します。</summary>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.#ctor(System.String)">
      <summary>指定されたタグ名を持つ新しいタグを作成します。</summary>
      <param name="tagName"> "&lt;"、"/"、または "&lt;" の区切り記号を含まないタグ名。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tagName" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.AddCssClass(System.String)">
      <summary>タグ内の CSS クラスのリストに CSS クラスを追加します。</summary>
      <param name="value">追加する CSS クラス。</param>
    </member>
    <member name="P:System.Web.Mvc.TagBuilder.Attributes">
      <summary>属性のコレクションを取得します。</summary>
      <returns>属性のコレクション。</returns>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.CreateSanitizedId(System.String)">
      <summary>タグ ID の無効な各文字を有効な HTML 文字に置き換えます。</summary>
      <returns>不要部分が削除されたタグ ID。<paramref name="originalId" /> が null か空の場合、または <paramref name="originalId" /> の先頭が英文字でない場合は null。</returns>
      <param name="originalId">置き換える文字が含まれている可能性がある ID。</param>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.CreateSanitizedId(System.String,System.String)">
      <summary>タグ ID 内の無効な各文字を指定された置換文字列に置き換えます。</summary>
      <returns>不要部分が削除されたタグ ID。<paramref name="originalId" /> が null か空の場合、または <paramref name="originalId" /> の先頭が英文字でない場合は null。</returns>
      <param name="originalId">置き換える文字が含まれている可能性がある ID。</param>
      <param name="invalidCharReplacement">置換文字列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="invalidCharReplacement" /> が null です。</exception>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.GenerateId(System.String)">
      <summary>指定された名前を使用してタグの ID 属性 (不要部分を削除したもの) を生成します。</summary>
      <param name="name">ID 属性を生成するために使用する名前。</param>
    </member>
    <member name="P:System.Web.Mvc.TagBuilder.IdAttributeDotReplacement">
      <summary>無効な HTML 文字を置き換えるために使用できる文字列を取得または設定します。</summary>
      <returns>無効な HTML 文字を置き換えるために使用される文字列。</returns>
    </member>
    <member name="P:System.Web.Mvc.TagBuilder.InnerHtml">
      <summary>要素の内部 HTML 値を取得または設定します。</summary>
      <returns>要素の内部 HTML 値。</returns>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.MergeAttribute(System.String,System.String)">
      <summary>新しい属性をタグに追加します。</summary>
      <param name="key">属性のキー。</param>
      <param name="value">属性の値。</param>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.MergeAttribute(System.String,System.String,System.Boolean)">
      <summary>開始タグに新しい属性を追加するか、必要に応じてタグ内の既存の属性を置き換えます。</summary>
      <param name="key">属性のキー。</param>
      <param name="value">属性の値。</param>
      <param name="replaceExisting">指定された <paramref name="key" /> 値を持つ属性が存在する場合に、既存の属性を置き換えるには true、元の属性を変更せずに残すには false。</param>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.MergeAttributes``2(System.Collections.Generic.IDictionary{``0,``1})">
      <summary>新しい属性をタグに追加します。</summary>
      <param name="attributes">追加する属性のコレクション。</param>
      <typeparam name="TKey">キー オブジェクトの型。</typeparam>
      <typeparam name="TValue">値オブジェクトの型。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.MergeAttributes``2(System.Collections.Generic.IDictionary{``0,``1},System.Boolean)">
      <summary>タグに新しい属性を追加するか、必要に応じてタグ内の既存の属性を置き換えます。</summary>
      <param name="attributes">追加または置き換える属性のコレクション。</param>
      <param name="replaceExisting">
        <paramref name="attributes" /> 内の各属性について、同じキーを持つ属性が既に存在する場合に属性を置き換えるには true、元の属性を変更せずに残すには false。</param>
      <typeparam name="TKey">キー オブジェクトの型。</typeparam>
      <typeparam name="TValue">値オブジェクトの型。</typeparam>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.SetInnerText(System.String)">
      <summary>要素の <see cref="P:System.Web.Mvc.TagBuilder.InnerHtml" /> プロパティを、指定された文字列の HTML エンコード バージョンに設定します。</summary>
      <param name="innerText">HTML でエンコードする文字列。</param>
    </member>
    <member name="P:System.Web.Mvc.TagBuilder.TagName">
      <summary>このタグのタグ名を取得します。</summary>
      <returns>名前。</returns>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.ToString">
      <summary>要素を <see cref="F:System.Web.Mvc.TagRenderMode.Normal" /> 要素として表示します。</summary>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.ToString(System.Web.Mvc.TagRenderMode)">
      <summary>指定された表示モードを使用して HTML タグを表示します。</summary>
      <returns>表示される HTML タグ。</returns>
      <param name="renderMode">表示モード。</param>
    </member>
    <member name="T:System.Web.Mvc.TagRenderMode">
      <summary>HTML タグの表示に使用できるモードを列挙します。</summary>
    </member>
    <member name="F:System.Web.Mvc.TagRenderMode.EndTag">
      <summary>終了タグ (たとえば &lt;/tag&gt;) を表示するためのモードを表します。</summary>
    </member>
    <member name="F:System.Web.Mvc.TagRenderMode.Normal">
      <summary>通常のテキストを表示するためのモードを表します。</summary>
    </member>
    <member name="F:System.Web.Mvc.TagRenderMode.SelfClosing">
      <summary>自己終了タグ (たとえば &lt;tag /&gt;) を表示するためのモードを表します。</summary>
    </member>
    <member name="F:System.Web.Mvc.TagRenderMode.StartTag">
      <summary>開始タグ (たとえば &lt;tag&gt;) を表示するためのモードを表します。</summary>
    </member>
    <member name="T:System.Web.Mvc.UnobtrusiveValidationAttributesGenerator">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Web.Mvc.UnobtrusiveValidationAttributesGenerator.GetValidationAttributes(System.Collections.Generic.IEnumerable{System.Web.Mvc.ModelClientValidationRule},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。<see cref="T:System.Web.Mvc.UnobtrusiveValidationAttributesGenerator" /> の構造体またはコンテンツから検証の属性を取得します。</summary>
      <param name="clientRules">
        <see cref="T:System.Web.Mvc.ModelClientValidationRule" /> が実装されます。</param>
      <param name="results">検証の結果。</param>
    </member>
    <member name="T:System.Web.WebPages.ApplicationPart">
      <summary>アセンブリをアプリケーション パーツとして登録するメソッドを含みます。</summary>
    </member>
    <member name="M:System.Web.WebPages.ApplicationPart.#ctor(System.Reflection.Assembly,System.String)">
      <summary>指定したアセンブリとルート仮想パスを使用して、<see cref="T:System.Web.WebPages.ApplicationPart" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="assembly">アセンブリ。</param>
      <param name="rootVirtualPath">ルート仮想パス。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rootVirtualPath" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.ApplicationPart.ProcessVirtualPath(System.Reflection.Assembly,System.String,System.String)">
      <summary>指定された基本仮想パスと指定された仮想パスを使用して、指定されたアセンブリまたはアセンブリ内のリソースへのパスを解決します。</summary>
      <returns>アセンブリまたはリソースのパス。</returns>
      <param name="assembly">アセンブリ。</param>
      <param name="baseVirtualPath">基本仮想パス。</param>
      <param name="virtualPath">仮想パス。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="assembly" /> は登録されていません。</exception>
    </member>
    <member name="M:System.Web.WebPages.ApplicationPart.Register(System.Web.WebPages.ApplicationPart)">
      <summary>アセンブリとそのアセンブリ内のすべての Web ページを、利用可能なアプリケーション パーツのリストに追加します。</summary>
      <param name="applicationPart">アプリケーション パーツ。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="applicationPart" /> は既に登録されています。</exception>
    </member>
    <member name="T:System.Web.WebPages.ApplicationStartPage">
      <summary>ASP.NET Web Pages アプリケーションのスタート ページ (_AppStart.cshtml または _AppStart.vbhtml ファイル) を実行および表示するために使用されるオブジェクトとメソッドを提供します。</summary>
    </member>
    <member name="M:System.Web.WebPages.ApplicationStartPage.#ctor">
      <summary>
        <see cref="T:System.Web.WebPages.ApplicationStartPage" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Web.WebPages.ApplicationStartPage.Application">
      <summary>このアプリケーションの開始ページを参照する HTTP アプリケーション オブジェクトを取得します。</summary>
      <returns>このアプリケーションの開始ページを参照する HTTP アプリケーション オブジェクト。</returns>
    </member>
    <member name="F:System.Web.WebPages.ApplicationStartPage.CacheKeyPrefix">
      <summary>アプリケーションのスタート ページによってキャッシュに追加されるすべてのキーに適用されるプレフィックス。</summary>
    </member>
    <member name="P:System.Web.WebPages.ApplicationStartPage.Context">
      <summary>このページに関連付けられているコンテキスト データを表す <see cref="T:System.Web.HttpContextBase" /> オブジェクトを取得します。</summary>
      <returns>現在のコンテキスト データ。</returns>
    </member>
    <member name="M:System.Web.WebPages.ApplicationStartPage.GetOutputWriter">
      <summary>ページを表示するために使用するテキスト ライター インスタンスを返します。</summary>
      <returns>テキスト ライター。</returns>
    </member>
    <member name="P:System.Web.WebPages.ApplicationStartPage.Markup">
      <summary>アプリケーションのスタート ページの出力を HTML エンコードされた文字列として取得します。</summary>
      <returns>アプリケーションのスタート ページの、HTML エンコードされた文字列形式の出力。</returns>
    </member>
    <member name="P:System.Web.WebPages.ApplicationStartPage.Output">
      <summary>ページのテキスト ライターを取得します。</summary>
      <returns>ページのテキスト ライター。</returns>
    </member>
    <member name="F:System.Web.WebPages.ApplicationStartPage.StartPageVirtualPath">
      <summary>アプリケーションのスタート ページのパス。</summary>
    </member>
    <member name="P:System.Web.WebPages.ApplicationStartPage.VirtualPath">
      <summary>ページの仮想パスを取得または設定します。</summary>
      <returns>仮想パス。</returns>
    </member>
    <member name="M:System.Web.WebPages.ApplicationStartPage.Write(System.Object)">
      <summary>指定されたオブジェクトの文字列表現を HTML エンコードされた文字列として書き込みます。</summary>
      <param name="value">エンコードして書き込むオブジェクト。</param>
    </member>
    <member name="M:System.Web.WebPages.ApplicationStartPage.Write(System.Web.WebPages.HelperResult)">
      <summary>指定された <see cref="T:System.Web.WebPages.HelperResult" /> オブジェクトを HTML エンコードされた文字列として書き込みます。</summary>
      <param name="result">エンコードして書き込むヘルパーの結果。</param>
    </member>
    <member name="M:System.Web.WebPages.ApplicationStartPage.WriteLiteral(System.Object)">
      <summary>指定されたオブジェクトを HTML エンコードせずに書き込みます。</summary>
      <param name="value">書き込むオブジェクト。</param>
    </member>
    <member name="T:System.Web.WebPages.AttributeValue">
      <summary>属性の値を格納します。この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Web.WebPages.AttributeValue.#ctor(System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.Instrumentation.PositionTagged{System.Object},System.Boolean)">
      <summary>
        <see cref="T:System.Web.WebPages.AttributeValue" /> クラスの新しいインスタンスを初期化します。この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="prefix">属性の名前空間プレフィックス。</param>
      <param name="value">属性の値。</param>
      <param name="literal">値がリテラル値であることを示す場合は true。それ以外の場合は false。</param>
    </member>
    <member name="M:System.Web.WebPages.AttributeValue.FromTuple(System.Tuple{System.Tuple{System.String,System.Int32},System.Tuple{System.Object,System.Int32},System.Boolean})">
      <summary>指定した組オブジェクトから属性の値を作成します。</summary>
      <returns>作成された属性の値。</returns>
      <param name="value">作成元の組オブジェクト。</param>
    </member>
    <member name="M:System.Web.WebPages.AttributeValue.FromTuple(System.Tuple{System.Tuple{System.String,System.Int32},System.Tuple{System.String,System.Int32},System.Boolean})">
      <summary>指定した組オブジェクトから属性の値を作成します。</summary>
      <returns>作成された属性の値。</returns>
      <param name="value">作成元の組オブジェクト。</param>
    </member>
    <member name="P:System.Web.WebPages.AttributeValue.Literal">
      <summary>値がリテラル値であるかどうかを示す値を取得または設定します。この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns>値がリテラル値である場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Web.WebPages.AttributeValue.op_Implicit(System.Tuple{System.Tuple{System.String,System.Int32},System.Tuple{System.Object,System.Int32},System.Boolean})~System.Web.WebPages.AttributeValue">
      <summary>指定した組オブジェクトから属性の値を作成します。</summary>
      <returns>作成された属性の値。</returns>
      <param name="value">作成元の組オブジェクト。</param>
    </member>
    <member name="M:System.Web.WebPages.AttributeValue.op_Implicit(System.Tuple{System.Tuple{System.String,System.Int32},System.Tuple{System.String,System.Int32},System.Boolean})~System.Web.WebPages.AttributeValue">
      <summary>指定した組オブジェクトから属性の値を作成します。</summary>
      <returns>作成された属性の値。</returns>
      <param name="value">作成元の組オブジェクト。</param>
    </member>
    <member name="P:System.Web.WebPages.AttributeValue.Prefix">
      <summary>属性の名前空間プレフィックスを取得または設定します。この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns>属性の名前空間プレフィックス。</returns>
    </member>
    <member name="P:System.Web.WebPages.AttributeValue.Value">
      <summary>属性の値を取得または設定します。この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns>属性の値。</returns>
    </member>
    <member name="T:System.Web.WebPages.BrowserHelpers">
      <summary>カスタム ブラウザー (ユーザー エージェント) 情報を指定する方法を提供します。</summary>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.ClearOverriddenBrowser(System.Web.HttpContextBase)">
      <summary>現在の要求でオーバーライドされたユーザー エージェントがあれば削除します。</summary>
      <param name="httpContext">現在のコンテキスト。</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.GetOverriddenBrowser(System.Web.HttpContextBase)">
      <summary>オーバーライドされたブラウザー機能のブラウザー機能オブジェクトを返します。オーバーライドが指定されていない場合は実際のブラウザーのブラウザー機能オブジェクトを返します。</summary>
      <returns>ブラウザー機能。</returns>
      <param name="httpContext">現在のコンテキスト。</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.GetOverriddenUserAgent(System.Web.HttpContextBase)">
      <summary>オーバーライドされたユーザー エージェント値を返します。オーバーライドが指定されていない場合は実際のユーザー エージェント文字列を返します。</summary>
      <returns>ユーザー エージェント文字列。</returns>
      <param name="httpContext">現在のコンテキスト。</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.GetVaryByCustomStringForOverriddenBrowser(System.Web.HttpContext)">
      <summary>ブラウザーの種類によって異なる文字列を取得します。</summary>
      <returns>ブラウザーを識別する文字列。</returns>
      <param name="httpContext">現在のコンテキスト。</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.GetVaryByCustomStringForOverriddenBrowser(System.Web.HttpContextBase)">
      <summary>ブラウザーの種類によって異なる文字列を取得します。</summary>
      <returns>ブラウザーを識別する文字列。</returns>
      <param name="httpContext">現在のコンテキスト ベース。</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.SetOverriddenBrowser(System.Web.HttpContextBase,System.String)">
      <summary>指定されたユーザー エージェントを使用して、要求の実際のユーザー エージェント値をオーバーライドします。</summary>
      <param name="httpContext">現在のコンテキスト。</param>
      <param name="userAgent">使用するユーザー エージェント。</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.SetOverriddenBrowser(System.Web.HttpContextBase,System.Web.WebPages.BrowserOverride)">
      <summary>指定されたブラウザー オーバーライド情報を使用して、要求の実際のユーザー エージェント値をオーバーライドします。</summary>
      <param name="httpContext">現在のコンテキスト。</param>
      <param name="browserOverride">使用するブラウザー オーバーライド情報を表す列挙値のいずれか。</param>
    </member>
    <member name="T:System.Web.WebPages.BrowserOverride">
      <summary>
        <see cref="M:System.Web.WebPages.BrowserHelpers.SetOverriddenBrowser(System.Web.HttpContextBase,System.Web.WebPages.BrowserOverride)" /> メソッドに定義できるブラウザーの種類を指定します。</summary>
    </member>
    <member name="F:System.Web.WebPages.BrowserOverride.Desktop">
      <summary>デスクトップ ブラウザーを指定します。</summary>
    </member>
    <member name="F:System.Web.WebPages.BrowserOverride.Mobile">
      <summary>モバイル ブラウザーを指定します。</summary>
    </member>
    <member name="T:System.Web.WebPages.BrowserOverrideStore">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。現在の BrowserOverrideStore は、要求のユーザー エージェントを取得および設定するために使用されます。</summary>
    </member>
    <member name="M:System.Web.WebPages.BrowserOverrideStore.#ctor">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。<see cref="T:System.Web.WebPages.BrowserOverrideStore" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.WebPages.BrowserOverrideStore.GetOverriddenUserAgent(System.Web.HttpContextBase)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。ブラウザーのオーバーライド Cookie を検索して、ユーザー エージェントを検索します。</summary>
      <returns>ユーザー エージェント。</returns>
      <param name="httpContext">HTTP コンテキスト。</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserOverrideStore.SetOverriddenUserAgent(System.Web.HttpContextBase,System.String)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。現在の要求の応答に、設定されたユーザー エージェントでブラウザーのオーバーライド Cookie を追加します。</summary>
      <param name="httpContext">HTTP コンテキスト。</param>
      <param name="userAgent">ユーザー エージェント。</param>
    </member>
    <member name="T:System.Web.WebPages.BrowserOverrideStores">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Web.WebPages.BrowserOverrideStores.#ctor">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="P:System.Web.WebPages.BrowserOverrideStores.Current">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="T:System.Web.WebPages.CookieBrowserOverrideStore">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。Cookie からの要求でオーバーライドされたユーザー エージェントを取得します。オーバーライドされたユーザー エージェントを設定する Cookie を作成します。</summary>
    </member>
    <member name="M:System.Web.WebPages.CookieBrowserOverrideStore.#ctor">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。<see cref="T:System.Web.WebPages.CookieBrowserOverrideStore" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.WebPages.CookieBrowserOverrideStore.#ctor(System.Int32)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。<see cref="T:System.Web.WebPages.CookieBrowserOverrideStore" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="daysToExpire">残り有効期限の日数。</param>
    </member>
    <member name="M:System.Web.WebPages.CookieBrowserOverrideStore.GetOverriddenUserAgent(System.Web.HttpContextBase)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。ブラウザーのオーバーライド Cookie を検索して、ユーザー エージェントを検索します。</summary>
      <returns>ユーザー エージェント。</returns>
      <param name="httpContext">HTTP コンテキスト。</param>
    </member>
    <member name="M:System.Web.WebPages.CookieBrowserOverrideStore.SetOverriddenUserAgent(System.Web.HttpContextBase,System.String)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。現在の要求の応答に、設定されたユーザー エージェントでブラウザーのオーバーライド Cookie を追加します。</summary>
      <param name="httpContext">HTTP コンテキスト。</param>
      <param name="userAgent">ユーザー エージェント。</param>
    </member>
    <member name="T:System.Web.WebPages.DefaultDisplayMode">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。Web ページの既定の表示モードを表します。</summary>
    </member>
    <member name="M:System.Web.WebPages.DefaultDisplayMode.#ctor">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。<see cref="T:System.Web.WebPages.DefaultDisplayMode" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.WebPages.DefaultDisplayMode.#ctor(System.String)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。<see cref="T:System.Web.WebPages.DefaultDisplayMode" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="suffix">サフィックス。</param>
    </member>
    <member name="M:System.Web.WebPages.DefaultDisplayMode.CanHandleContext(System.Web.HttpContextBase)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。<see cref="T:System.Web.HttpContextBase" /> がコンテキストを処理できるかどうかの値を示します。</summary>
      <returns>
        <see cref="T:System.Web.HttpContextBase" /> がコンテキストを処理できる場合は true。それ以外の場合は false。</returns>
      <param name="httpContext">指定された HTTP コンテキスト。</param>
    </member>
    <member name="P:System.Web.WebPages.DefaultDisplayMode.ContextCondition">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。コンテキスト条件が既定のモードを表示するかどうかを示す値を取得または設定します。</summary>
      <returns>コンテキスト条件が既定のモードを表示する場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Web.WebPages.DefaultDisplayMode.DisplayModeId">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。Web ページの表示モード識別子を取得します。</summary>
      <returns>Web ページの表示モード識別子。</returns>
    </member>
    <member name="M:System.Web.WebPages.DefaultDisplayMode.GetDisplayInfo(System.Web.HttpContextBase,System.String,System.Func{System.String,System.Boolean})">
      <summary>結果ウィンドウ内の項目に関する表示情報を取得します。</summary>
      <returns>結果ウィンドウ内の項目に関する表示情報。</returns>
      <param name="httpContext">HTTP コンテキスト。</param>
      <param name="virtualPath">仮想パス。</param>
      <param name="virtualPathExists">仮想パスが存在する場合は true。それ以外の場合は false。</param>
    </member>
    <member name="M:System.Web.WebPages.DefaultDisplayMode.TransformPath(System.String,System.String)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。表示モードのパスを変換します。</summary>
      <returns>変換する表示モードのパス。</returns>
      <param name="virtualPath">仮想パス。</param>
      <param name="suffix">サフィックス。</param>
    </member>
    <member name="T:System.Web.WebPages.DisplayInfo">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。プロパティの表示情報を表します。</summary>
    </member>
    <member name="M:System.Web.WebPages.DisplayInfo.#ctor(System.String,System.Web.WebPages.IDisplayMode)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。<see cref="T:System.Web.WebPages.DisplayInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="filePath">仮想パス。</param>
      <param name="displayMode">アクティブな表示モード。</param>
    </member>
    <member name="P:System.Web.WebPages.DisplayInfo.DisplayMode">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。Web ページのアクティブな表示モードを取得します。</summary>
      <returns>Web ページのアクティブな表示モード。</returns>
    </member>
    <member name="P:System.Web.WebPages.DisplayInfo.FilePath">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。現在の Web ページの仮想パスを取得します。</summary>
      <returns>現在の Web ページの仮想パス。</returns>
    </member>
    <member name="T:System.Web.WebPages.DisplayModeProvider">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。プロバイダーの表示のモードを表します。</summary>
    </member>
    <member name="F:System.Web.WebPages.DisplayModeProvider.DefaultDisplayModeId">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。既定の表示モード識別子を定義します。</summary>
    </member>
    <member name="M:System.Web.WebPages.DisplayModeProvider.GetAvailableDisplayModesForContext(System.Web.HttpContextBase,System.Web.WebPages.IDisplayMode)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。コンテキスト ベースで使用できる表示モードの一覧を取得します。</summary>
      <returns>コンテキスト ベースで使用できる表示モードの一覧。</returns>
      <param name="httpContext">HTTP コンテキスト ベース。</param>
      <param name="currentDisplayMode">現在の表示モード。</param>
    </member>
    <member name="M:System.Web.WebPages.DisplayModeProvider.GetDisplayInfoForVirtualPath(System.String,System.Web.HttpContextBase,System.Func{System.String,System.Boolean},System.Web.WebPages.IDisplayMode)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。仮想パスの <see cref="T:System.Web.WebPages.DisplayInfo" /> を取得します。</summary>
      <returns>仮想パスの <see cref="T:System.Web.WebPages.DisplayInfo" />。</returns>
      <param name="virtualPath">仮想パス。</param>
      <param name="httpContext">HTTP コンテキスト ベース。</param>
      <param name="virtualPathExists">仮想パスが存在する場合は true。それ以外の場合は false。</param>
      <param name="currentDisplayMode">現在の表示モード。</param>
    </member>
    <member name="P:System.Web.WebPages.DisplayModeProvider.Instance">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。<see cref="T:System.Web.WebPages.DisplayModeProvider" /> のインスタンスを取得します。</summary>
      <returns>
        <see cref="T:System.Web.WebPages.DisplayModeProvider" />のインスタンス。</returns>
    </member>
    <member name="F:System.Web.WebPages.DisplayModeProvider.MobileDisplayModeId">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。モバイルの表示モード識別子を定義します。</summary>
    </member>
    <member name="P:System.Web.WebPages.DisplayModeProvider.Modes">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。<see cref="T:System.Web.WebPages.DisplayModeProvider" /> のモード一覧を取得します。</summary>
      <returns>
        <see cref="T:System.Web.WebPages.DisplayModeProvider" /> のモード一覧。</returns>
    </member>
    <member name="P:System.Web.WebPages.DisplayModeProvider.RequireConsistentDisplayMode">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。Web ページで一貫した表示モードが必須かどうかを示す値を取得または設定します。</summary>
      <returns>Web ページで一貫した表示モードが必須である場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:System.Web.WebPages.HelperPage">
      <summary>ASP.NET で .cshtml または .vbhtml ファイルをコンパイルする場合に使用され、ページ レベルとアプリケーション レベルのプロパティとメソッドを公開する、ページの基本クラスを表します。</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.#ctor">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。<see cref="T:System.Web.WebPages.HelperPage" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.App">
      <summary>呼び出し元がカスタム アプリケーションのスコープ指定されたプロパティを作成してアクセスするために使用できる <see cref="T:System.Dynamic.DynamicObject" /> オブジェクトとして、アプリケーション状態データを取得します。</summary>
      <returns>アプリケーション状態データ。</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.AppState">
      <summary>ASP.NET アプリケーションでセッション間および要求間で共有できるグローバルなアプリケーション状態データへの参照を取得します。</summary>
      <returns>アプリケーション状態データ。</returns>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.BeginContext(System.IO.TextWriter,System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。すべてのヘルパー ステートメントをヘルパー ページのコンテキストに置きます。</summary>
      <param name="writer">テキスト ライター。</param>
      <param name="virtualPath">ヘルパーの仮想パス。</param>
      <param name="startPosition">開始位置。</param>
      <param name="length">コンテキストの長さ。</param>
      <param name="isLiteral">コンテキストにリテラル属性がある場合は true。それ以外の場合は false。</param>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.BeginContext(System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。すべてのヘルパー ステートメントをヘルパー ページのコンテキストに置きます。</summary>
      <param name="virtualPath">ヘルパーの仮想パス。</param>
      <param name="startPosition">開始位置。</param>
      <param name="length">コンテキストの長さ。</param>
      <param name="isLiteral">コンテキストにリテラル属性がある場合は true。それ以外の場合は false。</param>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Cache">
      <summary>現在のアプリケーション ドメインのキャッシュ オブジェクトを取得します。</summary>
      <returns>キャッシュ オブジェクト。</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Context">
      <summary>ページに関連付けられている <see cref="T:System.Web.HttpContextBase" /> オブジェクトの参照を取得します。</summary>
      <returns>現在のコンテキスト データ。</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.CurrentPage">
      <summary>このヘルパー ページの現在のページを取得します。</summary>
      <returns>現在のページ。</returns>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.EndContext(System.IO.TextWriter,System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。コンテキスト ブロックの終了を示します。</summary>
      <param name="writer">テキスト ライター。</param>
      <param name="virtualPath">ヘルパーの仮想パス。</param>
      <param name="startPosition">開始位置。</param>
      <param name="length">コンテキストの長さ。</param>
      <param name="isLiteral">コンテキストにリテラル属性がある場合は true。それ以外の場合は false。</param>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.EndContext(System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。コンテキスト ブロックの終了を示します。</summary>
      <param name="virtualPath">ヘルパーの仮想パス。</param>
      <param name="startPosition">開始位置。</param>
      <param name="length">コンテキストの長さ。</param>
      <param name="isLiteral">コンテキストにリテラル属性がある場合は true。それ以外の場合は false。</param>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.HelperVirtualPath">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。ヘルパー ページのパスを取得または設定します。</summary>
      <returns>ヘルパー ページのパス。</returns>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.Href(System.String,System.Object[])">
      <summary>指定されたパラメーターを使用して、アプリケーション相対 URL から絶対 URL を作成します。</summary>
      <returns>絶対 URL。</returns>
      <param name="path">URL で使用する初期パス。</param>
      <param name="pathParts">フォルダーやサブフォルダーなどの追加のパス情報。</param>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Html">
      <summary>ページに関連付けられている <see cref="T:System.Web.WebPages.Html.HtmlHelper" /> オブジェクトの参照を取得します。</summary>
      <returns>ページ内の HTML フォーム コントロールの表示をサポートするオブジェクト。</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.IsAjax">
      <summary>Web ページの要求時に Ajax が使用されているかどうかを示す値を取得します。</summary>
      <returns>要求時に Ajax が使用されている場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.IsPost">
      <summary>現在の要求が post である (HTTP POST 動詞を使用して送信された) かどうかを示す値を取得します。</summary>
      <returns>HTTP 動詞が POST である場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Model">
      <summary>ページに関連付けられているモデルを取得します。</summary>
      <returns>ページのビュー データに関連付けられているモデルを表すオブジェクト。</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.ModelState">
      <summary>ページに関連付けられたモデルの状態データを取得します。</summary>
      <returns>モデルの状態。</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Page">
      <summary>ページ、レイアウト ページ、部分ページ間で共有されるページ データへのプロパティに似たアクセスを取得します。</summary>
      <returns>ページ データを格納しているオブジェクト。</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.PageContext">
      <summary>Web ページの HTTP コンテキストを取得および設定します。</summary>
      <returns>Web ページの HTTP コンテキスト。</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.PageData">
      <summary>ページ、レイアウト ページ、部分ページ間で共有されるページ データへの配列に似たアクセスを取得します。</summary>
      <returns>ページ データへの配列に似たアクセスを提供するオブジェクト。</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Request">
      <summary>現在の HTTP 要求の <see cref="T:System.Web.HttpRequest" /> オブジェクトを取得します。</summary>
      <returns>Web 要求時にクライアントが送信した HTTP 値を格納する <see cref="T:System.Web.HttpRequest" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Response">
      <summary>現在の HTTP 応答の <see cref="T:System.Web.HttpResponse" /> オブジェクトを取得します。</summary>
      <returns>ASP.NET 操作からの HTTP 応答情報を格納する <see cref="T:System.Web.HttpResponse" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Server">
      <summary>Web ページ処理の一部として使用可能なメソッドを提供する <see cref="T:System.Web.HttpServerUtility" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Web.HttpServerUtility" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Session">
      <summary>現在の HTTP 要求の <see cref="T:System.Web.HttpSessionState" /> オブジェクトを取得します。</summary>
      <returns>現在の HTTP 要求の <see cref="T:System.Web.HttpSessionState" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.UrlData">
      <summary>URL パスに関連するデータを取得します。</summary>
      <returns>URL パスに関連するデータ。</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.User">
      <summary>HTTP コンテキストに基づいたユーザー値を取得します。</summary>
      <returns>HTTP コンテキストに基づいたユーザー値。</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.VirtualPath">
      <summary>ページの仮想パスを取得します。</summary>
      <returns>仮想パス。</returns>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.WriteAttributeTo(System.IO.TextWriter,System.String,System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.AttributeValue[])">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。ヘルパーに関連付けられた属性を書き込みます。</summary>
      <param name="writer">テキスト ライター。</param>
      <param name="name">属性の名前。</param>
      <param name="prefix">プレフィックス。</param>
      <param name="suffix">サフィックス。</param>
      <param name="values">属性の値。</param>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.WriteLiteralTo(System.IO.TextWriter,System.Object)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。リテラル オブジェクトをヘルパーに書き込みます。</summary>
      <param name="writer">テキスト ライター。</param>
      <param name="value">オブジェクトの値。</param>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.WriteLiteralTo(System.IO.TextWriter,System.Web.WebPages.HelperResult)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。ヘルパーの結果オブジェクトをヘルパーへ書き込みます。</summary>
      <param name="writer">テキスト ライター</param>
      <param name="value">ヘルパーの結果。</param>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.WriteTo(System.IO.TextWriter,System.Object)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。ヘルパーにオブジェクトを書き込みます。</summary>
      <param name="writer">テキスト ライター。</param>
      <param name="value">オブジェクトの値。</param>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.WriteTo(System.IO.TextWriter,System.Web.WebPages.HelperResult)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。ヘルパーの結果オブジェクトをヘルパーへ書き込みます。</summary>
      <param name="writer">テキスト ライター。</param>
      <param name="value">ヘルパーの結果の値。</param>
    </member>
    <member name="T:System.Web.WebPages.HelperResult">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperResult.#ctor(System.Action{System.IO.TextWriter})">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperResult.ToHtmlString">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperResult.ToString">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperResult.WriteTo(System.IO.TextWriter)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="T:System.Web.WebPages.HttpContextExtensions">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Web.WebPages.HttpContextExtensions.RedirectLocal(System.Web.HttpContextBase,System.String)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Web.WebPages.HttpContextExtensions.RegisterForDispose(System.Web.HttpContextBase,System.IDisposable)">
      <summary>この型/メンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="T:System.Web.WebPages.IDisplayMode">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。Web ページの表示モードインターフェイスを取得します。</summary>
    </member>
    <member name="M:System.Web.WebPages.IDisplayMode.CanHandleContext(System.Web.HttpContextBase)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。Web ページが HTTP コンテキストを処理できるかどうかの値を示します。</summary>
      <returns>Web ページが HTTP コンテキストを処理できる場合は true。それ以外の場合は false。</returns>
      <param name="httpContext">HTTP コンテキスト。</param>
    </member>
    <member name="P:System.Web.WebPages.IDisplayMode.DisplayModeId">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。Web ページの表示モード ID を取得します。</summary>
      <returns>Web ページの表示モード ID。</returns>
    </member>
    <member name="M:System.Web.WebPages.IDisplayMode.GetDisplayInfo(System.Web.HttpContextBase,System.String,System.Func{System.String,System.Boolean})">
      <summary>Web ページのすべての情報を表示するために、このメソッドを返します。</summary>
      <returns>Web ページのすべての情報を表示するためのメソッド。</returns>
      <param name="httpContext">HTTP コンテキスト。</param>
      <param name="virtualPath">仮想パス。</param>
      <param name="virtualPathExists">仮想パスが存在する場合は true。それ以外の場合は false。</param>
    </member>
    <member name="T:System.Web.WebPages.ITemplateFile">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="P:System.Web.WebPages.ITemplateFile.TemplateInfo">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="T:System.Web.WebPages.IValidator">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。Web ページに含めるオブジェクトのプロパティとメソッドを定義します。</summary>
    </member>
    <member name="P:System.Web.WebPages.IValidator.ClientValidationRule">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。必須フィールドのクライアント検証用コンテナーを取得します。</summary>
      <returns>必須フィールドのクライアント検証用コンテナー。</returns>
    </member>
    <member name="M:System.Web.WebPages.IValidator.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。検証コンテキストを確認および更新する条件を評価します。</summary>
      <returns>検証コンテキストを確認および更新する条件。</returns>
      <param name="validationContext">検証コンテキスト。</param>
    </member>
    <member name="T:System.Web.WebPages.IVirtualPathFactory">
      <summary>仮想パス ハンドラー ファクトリによって実装されるメソッドを定義します。</summary>
    </member>
    <member name="M:System.Web.WebPages.IVirtualPathFactory.CreateInstance(System.String)">
      <summary>指定された仮想パスのハンドラー ファクトリを作成します。</summary>
      <returns>指定された仮想パスのハンドラー ファクトリ。</returns>
      <param name="virtualPath">仮想パス。</param>
    </member>
    <member name="M:System.Web.WebPages.IVirtualPathFactory.Exists(System.String)">
      <summary>指定された仮想パスがハンドラー ファクトリに関連付けられているかどうかを判断します。</summary>
      <returns>指定された仮想パスにハンドラー ファクトリが存在する場合は true。それ以外の場合は false。</returns>
      <param name="virtualPath">仮想パス。</param>
    </member>
    <member name="T:System.Web.WebPages.IWebPageRequestExecutor">
      <summary>Web ページ上でコードを実行できる実行子クラスを実装するメソッドを定義します。</summary>
    </member>
    <member name="M:System.Web.WebPages.IWebPageRequestExecutor.Execute(System.Web.WebPages.WebPage)">
      <summary>指定された Web ページ上でコードを実行します。</summary>
      <returns>実行子が Web ページの実行を引き継いだ場合は true。それ以外の場合は false。</returns>
      <param name="page">Web ページ。</param>
    </member>
    <member name="T:System.Web.WebPages.PageVirtualPathAttribute">
      <summary>Web ページ クラスのパス属性を表します。</summary>
    </member>
    <member name="M:System.Web.WebPages.PageVirtualPathAttribute.#ctor(System.String)">
      <summary>指定された仮想パスを使用して、<see cref="T:System.Web.WebPages.PageVirtualPathAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="virtualPath">仮想パス。</param>
    </member>
    <member name="P:System.Web.WebPages.PageVirtualPathAttribute.VirtualPath">
      <summary>現在の Web ページの仮想パスを取得します。</summary>
      <returns>仮想パス。</returns>
    </member>
    <member name="T:System.Web.WebPages.PreApplicationStartCode">
      <summary>Web ページのアプリケーション開始前のスタート コードの登録ポイントを提供します。</summary>
    </member>
    <member name="M:System.Web.WebPages.PreApplicationStartCode.Start">
      <summary>Web ページのアプリケーション開始前のスタート コードを登録します。</summary>
    </member>
    <member name="T:System.Web.WebPages.RequestExtensions">
      <summary>
        <see cref="T:System.Web.HttpRequestBase" /> クラスの拡張メソッドを定義します。</summary>
    </member>
    <member name="M:System.Web.WebPages.RequestExtensions.IsUrlLocalToHost(System.Web.HttpRequestBase,System.String)">
      <summary>指定された URL がローカル コンピューターを参照するかどうかを判断します。</summary>
      <returns>指定された URL がローカル コンピューターを参照する場合は true。それ以外の場合は false。</returns>
      <param name="request">HTTP 要求オブジェクト。</param>
      <param name="url">テストする URL。</param>
    </member>
    <member name="T:System.Web.WebPages.RequestFieldValidatorBase">
      <summary>検証ヘルパー クラスの抽象基本クラスとして機能します。</summary>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.#ctor(System.String)">
      <summary>派生クラスの新しいインスタンスを初期化し、検証対象の HTML 要素の名前を指定します。</summary>
      <param name="errorMessage">検証するユーザー入力要素の名前 (name 属性の値)。</param>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.#ctor(System.String,System.Boolean)">
      <summary>派生クラスの新しいインスタンスを初期化し、指定された文字列を、値が指定されていない場合に表示するエラー メッセージとして登録し、未検証のデータをメソッドで使用できるかどうかを指定します。</summary>
      <param name="errorMessage">エラー メッセージ。</param>
      <param name="useUnvalidatedValues">未検証のユーザー入力を使用する場合は true。未検証のデータを拒否する場合は false。このパラメーターは、必須フィールドの場合など、ユーザー入力の実際の値が重要でない状況でメソッドを呼び出すことによって、true に設定されます。</param>
    </member>
    <member name="P:System.Web.WebPages.RequestFieldValidatorBase.ClientValidationRule">
      <summary>派生クラスで実装された場合、必須フィールドのクライアント検証のコンテナーを取得します。</summary>
      <returns>コンテナー。</returns>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.GetHttpContext(System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>現在の要求の HTTP コンテキストを返します。</summary>
      <returns>コンテキスト。</returns>
      <param name="validationContext">検証コンテキスト。</param>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.GetRequestValue(System.Web.HttpRequestBase,System.String)">
      <summary>検証する値を返します。</summary>
      <returns>検証する値。</returns>
      <param name="request">現在の要求。</param>
      <param name="field">検証対象の現在の要求のフィールドの名前。</param>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.IsValid(System.Web.HttpContextBase,System.String)">
      <summary>指定された値が有効かどうかを示す値を返します。</summary>
      <returns>値が有効な場合は true。それ以外の場合は false。</returns>
      <param name="httpContext">現在のコンテキスト。</param>
      <param name="value">検証する値。</param>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>検証テストを実行します。</summary>
      <returns>検証テストの結果。</returns>
      <param name="validationContext">コンテキスト。</param>
    </member>
    <member name="T:System.Web.WebPages.ResponseExtensions">
      <summary>
        <see cref="T:System.Web.HttpResponseBase" /> 基本クラスの拡張メソッドを定義します。</summary>
    </member>
    <member name="M:System.Web.WebPages.ResponseExtensions.OutputCache(System.Web.HttpResponseBase,System.Int32,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Web.HttpCacheability)">
      <summary>HTTP 応答インスタンスのキャッシュ ポリシーを構成します。</summary>
      <param name="response">HTTP 応答インスタンス。</param>
      <param name="numberOfSeconds">項目がキャッシュから期限切れになるまでの時間の長さ (秒単位)。</param>
      <param name="sliding">スライド式にキャッシュから項目が期限切れになることを示す場合は true。項目が定義済みの有効期限に達した場合に期限切れになることを示す場合は false。</param>
      <param name="varyByParams">キャッシュに影響する GET または POST 操作で受け取ることができるすべてのパラメーターのリスト。</param>
      <param name="varyByHeaders">キャッシュに影響するすべての HTTP ヘッダーのリスト。</param>
      <param name="varyByContentEncodings">キャッシュに影響するすべてのコンテンツ エンコード ヘッダーのリスト。</param>
      <param name="cacheability">項目のキャッシュ方法を指定する列挙値のいずれか。</param>
    </member>
    <member name="M:System.Web.WebPages.ResponseExtensions.SetStatus(System.Web.HttpResponseBase,System.Int32)">
      <summary>指定された整数値を使用して、HTTP 応答の HTTP ステータス コードを設定します。</summary>
      <param name="response">HTTP 応答インスタンス。</param>
      <param name="httpStatusCode">HTTP ステータス コード。</param>
    </member>
    <member name="M:System.Web.WebPages.ResponseExtensions.SetStatus(System.Web.HttpResponseBase,System.Net.HttpStatusCode)">
      <summary>指定された HTTP ステータス コード列挙値を使用して、HTTP 応答の HTTP ステータス コードを設定します。</summary>
      <param name="response">HTTP 応答インスタンス。</param>
      <param name="httpStatusCode">HTTP ステータス コード</param>
    </member>
    <member name="M:System.Web.WebPages.ResponseExtensions.WriteBinary(System.Web.HttpResponseBase,System.Byte[])">
      <summary>HTTP 応答の出力ストリームに、指定されていないタイプのバイナリ コンテンツを表すバイトのシーケンスを書き込みます。</summary>
      <param name="response">HTTP 応答インスタンス。</param>
      <param name="data">書き込むバイトを格納する配列。</param>
    </member>
    <member name="M:System.Web.WebPages.ResponseExtensions.WriteBinary(System.Web.HttpResponseBase,System.Byte[],System.String)">
      <summary>HTTP 応答の出力ストリームに、指定された MIME タイプのバイナリ コンテンツを表すバイトのシーケンスを書き込みます。</summary>
      <param name="response">受信する HTTP 応答インスタンス。</param>
      <param name="data">書き込むバイトを格納する配列。</param>
      <param name="mimeType">バイナリ コンテンツの MIME タイプ。</param>
    </member>
    <member name="T:System.Web.WebPages.SectionWriter">
      <summary>コンテンツ セクションが書き込まれるときに呼び出される 1 つ以上のメソッドを表すデリゲートを提供します。</summary>
    </member>
    <member name="T:System.Web.WebPages.StartPage">
      <summary>Razor ビュー エンジンを使用するスタート ページを表示するために使用するメソッドとプロパティを提供します。</summary>
    </member>
    <member name="M:System.Web.WebPages.StartPage.#ctor">
      <summary>
        <see cref="T:System.Web.WebPages.StartPage" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Web.WebPages.StartPage.ChildPage">
      <summary>現在のスタート ページの子ページを取得または設定します。</summary>
      <returns>現在のスタート ページの子ページ。</returns>
    </member>
    <member name="P:System.Web.WebPages.StartPage.Context">
      <summary>
        <see cref="P:System.Web.WebPages.StartPage.ChildPage" /> ページのコンテキストを取得または設定します。</summary>
      <returns>
        <see cref="P:System.Web.WebPages.StartPage.ChildPage" /> ページのコンテキスト。</returns>
    </member>
    <member name="M:System.Web.WebPages.StartPage.ExecutePageHierarchy">
      <summary>PageStart スタート ページおよび <see cref="P:System.Web.WebPages.StartPage.ChildPage" /> ページ内の、開発者によって書かれたコードを実行するために使用するメソッドを呼び出します。</summary>
    </member>
    <member name="M:System.Web.WebPages.StartPage.GetOutputWriter">
      <summary>ページを表示するために使用するテキスト ライター インスタンスを返します。</summary>
      <returns>テキスト ライター。</returns>
    </member>
    <member name="M:System.Web.WebPages.StartPage.GetStartPage(System.Web.WebPages.WebPageRenderingBase,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>指定されたページの初期化ページを返します。</summary>
      <returns>_AppStart ページが存在する場合、_AppStart ページ。_AppStart ページが見つからない場合、_PageStart ページが存在すれば _PageStart ページを返します。_AppStart ページも _PageStart ページも見つからない場合は、<paramref name="page" /> を返します。</returns>
      <param name="page">ページ。</param>
      <param name="fileName">ページのファイル名。</param>
      <param name="supportedExtensions">"cshtml" や "vbhtml" などの ASP.NET Razor 構文を含めることができるファイル名拡張子のコレクション。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="page" /> または <paramref name="fileName" /> のいずれかが null です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="supportedExtensions" /> が null または空です。</exception>
    </member>
    <member name="P:System.Web.WebPages.StartPage.Layout">
      <summary>
        <see cref="P:System.Web.WebPages.StartPage.ChildPage" /> ページのレイアウト ページのパスを取得または設定します。</summary>
      <returns>
        <see cref="P:System.Web.WebPages.StartPage.ChildPage" /> ページのレイアウト ページのパス。</returns>
    </member>
    <member name="P:System.Web.WebPages.StartPage.Page">
      <summary>ページ、レイアウト ページ、部分ページ間で共有される <see cref="P:System.Web.WebPages.StartPage.ChildPage" /> ページ データへのプロパティに似たアクセスを取得します。</summary>
      <returns>
        <see cref="P:System.Web.WebPages.StartPage.ChildPage" /> ページ データを格納しているオブジェクト。</returns>
    </member>
    <member name="P:System.Web.WebPages.StartPage.PageData">
      <summary>ページ、レイアウト ページ、部分ページ間で共有される <see cref="P:System.Web.WebPages.StartPage.ChildPage" /> ページ データへの配列に似たアクセスを取得します。</summary>
      <returns>
        <see cref="P:System.Web.WebPages.StartPage.ChildPage" /> ページ データへの配列に似たアクセスを提供するオブジェクト。</returns>
    </member>
    <member name="M:System.Web.WebPages.StartPage.RenderPage(System.String,System.Object[])">
      <summary>
        <see cref="P:System.Web.WebPages.StartPage.ChildPage" /> ページを表示します。</summary>
      <returns>Web ページを表す HTML マークアップ。</returns>
      <param name="path">表示するページのパス。</param>
      <param name="data">ビューを表示するために使用する追加のデータ。</param>
    </member>
    <member name="M:System.Web.WebPages.StartPage.RunPage">
      <summary>
        <see cref="P:System.Web.WebPages.StartPage.ChildPage" /> ページ内の、開発者によって書かれたコードを実行します。</summary>
    </member>
    <member name="M:System.Web.WebPages.StartPage.Write(System.Object)">
      <summary>指定されたオブジェクトの文字列表現を HTML エンコードされた文字列として書き込みます。</summary>
      <param name="value">エンコードして書き込むオブジェクト。</param>
    </member>
    <member name="M:System.Web.WebPages.StartPage.Write(System.Web.WebPages.HelperResult)">
      <summary>指定された <see cref="T:System.Web.WebPages.HelperResult" /> オブジェクトの文字列表現を HTML エンコードされた文字列として書き込みます。</summary>
      <param name="result">エンコードして書き込むヘルパーの結果。</param>
    </member>
    <member name="M:System.Web.WebPages.StartPage.WriteLiteral(System.Object)">
      <summary>指定されたオブジェクトの文字列表現を HTML エンコードせずに書き込みます。</summary>
      <param name="value">書き込むオブジェクト。</param>
    </member>
    <member name="T:System.Web.WebPages.StringExtensions">
      <summary>文字列値を他のデータ型に変換するユーティリティ メソッドを提供します。</summary>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.As``1(System.String)">
      <summary>文字列を、指定されたデータ型の厳密に型指定された値に変換します。</summary>
      <returns>変換された値。</returns>
      <param name="value">変換する値。</param>
      <typeparam name="TValue">変換先のデータ型。</typeparam>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.As``1(System.String,``0)">
      <summary>文字列を指定されたデータ型に変換し、既定値を指定します。</summary>
      <returns>変換された値。</returns>
      <param name="value">変換する値。</param>
      <param name="defaultValue">
        <paramref name="value" /> が null の場合に返す値。</param>
      <typeparam name="TValue">変換先のデータ型。</typeparam>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsBool(System.String)">
      <summary>文字列をブール (true/false) 値に変換します。</summary>
      <returns>変換された値。</returns>
      <param name="value">変換する値。</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsBool(System.String,System.Boolean)">
      <summary>文字列をブール (true/false) 値に変換し、既定値を指定します。</summary>
      <returns>変換された値。</returns>
      <param name="value">変換する値。</param>
      <param name="defaultValue">
        <paramref name="value" /> が null または無効な値である場合に返す値。</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsDateTime(System.String)">
      <summary>文字列を <see cref="T:System.DateTime" /> 値に変換します。</summary>
      <returns>変換された値。</returns>
      <param name="value">変換する値。</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsDateTime(System.String,System.DateTime)">
      <summary>文字列を <see cref="T:System.DateTime" /> 値に変換し、既定値を指定します。</summary>
      <returns>変換された値。</returns>
      <param name="value">変換する値。</param>
      <param name="defaultValue">
        <paramref name="value" /> が null または無効な値である場合に返す値。既定値は、システムでの最小の時間値です。</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsDecimal(System.String)">
      <summary>文字列を <see cref="T:System.Decimal" /> 数値に変換します。</summary>
      <returns>変換された値。</returns>
      <param name="value">変換する値。</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsDecimal(System.String,System.Decimal)">
      <summary>文字列を <see cref="T:System.Decimal" /> 数値に変換し、既定値を指定します。</summary>
      <returns>変換された値。</returns>
      <param name="value">変換する値。</param>
      <param name="defaultValue">
        <paramref name="value" /> が null または無効の場合に返す値。</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsFloat(System.String)">
      <summary>文字列を <see cref="T:System.Single" /> 数値に変換します。</summary>
      <returns>変換された値。</returns>
      <param name="value">変換する値。</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsFloat(System.String,System.Single)">
      <summary>文字列を <see cref="T:System.Single" /> 数値に変換し、既定値を指定します。</summary>
      <returns>変換された値。</returns>
      <param name="value">変換する値。</param>
      <param name="defaultValue">
        <paramref name="value" /> が null の場合に返す値。</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsInt(System.String)">
      <summary>文字列を整数に変換します。</summary>
      <returns>変換された値。</returns>
      <param name="value">変換する値。</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsInt(System.String,System.Int32)">
      <summary>文字列を整数に変換し、既定値を指定します。</summary>
      <returns>変換された値。</returns>
      <param name="value">変換する値。</param>
      <param name="defaultValue">
        <paramref name="value" /> が null または無効な値である場合に返す値。</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.Is``1(System.String)">
      <summary>文字列を指定されたデータ型に変換できるかどうかをチェックします。</summary>
      <returns>指定された型に <paramref name="value" /> を変換できる場合は true。それ以外の場合は false。</returns>
      <param name="value">テストする値。</param>
      <typeparam name="TValue">変換先のデータ型。</typeparam>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsBool(System.String)">
      <summary>文字列をブール (true/false) 型に変換できるかどうかをチェックします。</summary>
      <returns>指定された型に <paramref name="value" /> を変換できる場合は true。それ以外の場合は false。</returns>
      <param name="value">テストする文字列値。</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsDateTime(System.String)">
      <summary>文字列を <see cref="T:System.DateTime" /> 型に変換できるかどうかを確認します。</summary>
      <returns>指定された型に <paramref name="value" /> を変換できる場合は true。それ以外の場合は false。</returns>
      <param name="value">テストする文字列値。</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsDecimal(System.String)">
      <summary>文字列を <see cref="T:System.Decimal" /> 型に変換できるかどうかを確認します。</summary>
      <returns>指定された型に <paramref name="value" /> を変換できる場合は true。それ以外の場合は false。</returns>
      <param name="value">テストする文字列値。</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsEmpty(System.String)">
      <summary>文字列値が null または空かどうかをチェックします。</summary>
      <returns>
        <paramref name="value" /> が null または長さ 0 の文字列 ("") の場合は true。それ以外の場合は false。</returns>
      <param name="value">テストする文字列値。</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsFloat(System.String)">
      <summary>文字列を <see cref="T:System.Single" /> 型に変換できるかどうかを確認します。</summary>
      <returns>指定された型に <paramref name="value" /> を変換できる場合は true。それ以外の場合は false。</returns>
      <param name="value">テストする文字列値。</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsInt(System.String)">
      <summary>文字列を整数に変換できるかどうかをチェックします。</summary>
      <returns>指定された型に <paramref name="value" /> を変換できる場合は true。それ以外の場合は false。</returns>
      <param name="value">テストする文字列値。</param>
    </member>
    <member name="T:System.Web.WebPages.TemplateFileInfo">
      <summary>ファイル情報テンプレートを記述するメソッドとプロパティを含みます。</summary>
    </member>
    <member name="M:System.Web.WebPages.TemplateFileInfo.#ctor(System.String)">
      <summary>指定された仮想パスを使用して、<see cref="T:System.Web.WebPages.TemplateFileInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="virtualPath">仮想パス。</param>
    </member>
    <member name="P:System.Web.WebPages.TemplateFileInfo.VirtualPath">
      <summary>Web ページの仮想パスを取得します。</summary>
      <returns>仮想パス。</returns>
    </member>
    <member name="T:System.Web.WebPages.TemplateStack">
      <summary>
        <see cref="T:System.Web.WebPages.ITemplateFile" /> テンプレート ファイルの後入れ先出し (LIFO) コレクションを表します。</summary>
    </member>
    <member name="M:System.Web.WebPages.TemplateStack.GetCurrentTemplate(System.Web.HttpContextBase)">
      <summary>指定された HTTP コンテキストから現在のテンプレートを返します。</summary>
      <returns>スタックの最上部から削除されるテンプレート ファイル。</returns>
      <param name="httpContext"> テンプレート ファイルを格納するスタックを含む HTTP コンテキスト。</param>
    </member>
    <member name="M:System.Web.WebPages.TemplateStack.Pop(System.Web.HttpContextBase)">
      <summary>指定された HTTP コンテキスト内のスタックの一番上にあるテンプレート ファイルを削除して返します。</summary>
      <returns>スタックの最上部から削除されるテンプレート ファイル。</returns>
      <param name="httpContext">テンプレート ファイルを格納するスタックを含む HTTP コンテキスト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> が null です。</exception>
    </member>
    <member name="M:System.Web.WebPages.TemplateStack.Push(System.Web.HttpContextBase,System.Web.WebPages.ITemplateFile)">
      <summary>指定された HTTP コンテキスト内のスタックの一番上にあるテンプレート ファイルを挿入します。</summary>
      <param name="httpContext">テンプレート ファイルを格納するスタックを含む HTTP コンテキスト。</param>
      <param name="templateFile">指定されたスタックに挿入するテンプレート ファイル。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> または <paramref name="templateFile" /> が null です。</exception>
    </member>
    <member name="T:System.Web.WebPages.ValidationHelper">
      <summary>ユーザー入力の検証を実装します。</summary>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.Add(System.Collections.Generic.IEnumerable{System.String},System.Web.WebPages.IValidator[])">
      <summary>検証するユーザー入力要素のリストを登録します。</summary>
      <param name="fields">検証するユーザー入力要素の名前 (name 属性の値)。</param>
      <param name="validators">
        <paramref name="fields" /> に指定された各ユーザー入力要素に対して登録する検証のタイプ。</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.Add(System.String,System.Web.WebPages.IValidator[])">
      <summary>検証するユーザー入力要素を登録します。</summary>
      <param name="field">検証するユーザー入力要素の名前 (name 属性の値)。</param>
      <param name="validators">登録する 1 つ以上の検証のタイプのリスト。</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.AddFormError(System.String)">
      <summary>エラー メッセージを追加します。</summary>
      <param name="errorMessage">エラー メッセージ。</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.ClassFor(System.String)">
      <summary>ユーザー入力要素の検証メッセージが表示される場合に、使用される CSS スタイル定義を参照する属性を表示します。</summary>
      <returns>属性。</returns>
      <param name="field">検証するユーザー入力要素の名前 (name 属性の値)。</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.For(System.String)">
      <summary>個々のユーザー入力要素のクライアント側検証を有効にする属性を表示します。</summary>
      <returns>表示の対象となる属性。</returns>
      <param name="field">検証するユーザー入力要素の名前 (name 属性の値)。</param>
    </member>
    <member name="P:System.Web.WebPages.ValidationHelper.FormField">
      <summary>現在のフォームの名前を取得します。この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns>名前。</returns>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.GetErrors(System.String[])">
      <summary>現在の検証エラーのリストを返し、オプションでチェックするフィールドのリストを指定できます。</summary>
      <returns>エラーのリスト。</returns>
      <param name="fields">(省略可能) エラー情報を取得するユーザー入力要素の名前 (name 属性の値)。任意の数の要素名をコンマで区切って指定できます。フィールドのリストを指定しない場合、メソッドはすべてのフィールドのエラーを返します。</param>
    </member>
    <member name="P:System.Web.WebPages.ValidationHelper.InvalidCssClass">
      <summary>エラーの発生時に、エラー メッセージ表示の外観を指定するために使用するクラスの名前を取得します。この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns>名前。</returns>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.IsValid(System.String[])">
      <summary>ユーザー入力フィールドの内容が検証チェックに合格したかどうかを判断し、オプションでチェックするフィールドのリストを指定できます。</summary>
      <returns>指定されたすべてのフィールドが検証チェックに合格した場合は true、いずれかのフィールドに検証エラーが含まれる場合は false。</returns>
      <param name="fields">(省略可能) 検証エラーをチェックするユーザー入力要素の名前 (name 属性の値)。任意の数の要素名をコンマで区切って指定できます。フィールドのリストを指定しない場合、メソッドは検証対象として登録されているすべての要素をチェックします。</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.RequireField(System.String)">
      <summary>指定されたフィールドを、ユーザー入力必須フィールドとして登録します。</summary>
      <param name="field">検証するユーザー入力要素の名前 (name 属性の値)。</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.RequireField(System.String,System.String)">
      <summary>指定されたフィールドをユーザー入力必須フィールドとして登録し、指定された文字列を、値が指定されていない場合に表示するエラー メッセージとして登録します。</summary>
      <param name="field">検証するユーザー入力要素の名前 (name 属性の値)。</param>
      <param name="errorMessage">エラー メッセージ。</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.RequireFields(System.String[])">
      <summary>指定されたフィールドを、ユーザー入力必須フィールドとして登録します。</summary>
      <param name="fields">検証するユーザー入力要素の名前 (name 属性の値)。任意の数の要素名をコンマで区切って指定できます。</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.Validate(System.String[])">
      <summary>検証対象として登録されている要素に検証を実行し、オプションでチェックするフィールドのリストを指定できます。</summary>
      <returns>何らかの検証エラーが発生した場合、指定されたフィールドのエラーのリスト。</returns>
      <param name="fields">(省略可能) 検証するユーザー入力要素の名前 (name 属性の値)。任意の数の要素名をコンマで区切って指定できます。リストを指定しない場合、メソッドは登録されているすべての要素を検証します。</param>
    </member>
    <member name="P:System.Web.WebPages.ValidationHelper.ValidCssClass">
      <summary>エラーの発生時に、エラー メッセージ表示の外観を指定するために使用するクラスの名前を取得します。この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns>名前。</returns>
    </member>
    <member name="T:System.Web.WebPages.Validator">
      <summary>
        <see cref="M:System.Web.WebPages.ValidationHelper.Add(System.String,System.Web.WebPages.IValidator[])" /> メソッドを使用して、登録可能な検証テストを定義します。</summary>
    </member>
    <member name="M:System.Web.WebPages.Validator.#ctor">
      <summary>
        <see cref="T:System.Web.WebPages.Validator" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.WebPages.Validator.DateTime(System.String)">
      <summary>値を日時値として処理できるかどうかをテストする検証テストを定義します。</summary>
      <returns>検証テスト。</returns>
      <param name="errorMessage">検証が失敗した場合に表示するエラー メッセージ。</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Decimal(System.String)">
      <summary>値を 10 進数として処理できるかどうかをテストする検証テストを定義します。</summary>
      <returns>検証テスト。</returns>
      <param name="errorMessage">検証が失敗した場合に表示するエラー メッセージ。</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.EqualsTo(System.String,System.String)">
      <summary>別のフィールドの値と照らして、ユーザー入力をテストする検証テストを定義します。</summary>
      <returns>検証テスト。</returns>
      <param name="otherFieldName">比較する他方のフィールド。</param>
      <param name="errorMessage">検証が失敗した場合に表示するエラー メッセージ。</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Float(System.String)">
      <summary>値を浮動小数点数として処理できるかどうかをテストする検証テストを定義します。</summary>
      <returns>検証テスト。</returns>
      <param name="errorMessage">検証が失敗した場合に表示するエラー メッセージ。</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Integer(System.String)">
      <summary>値を整数として処理できるかどうかをテストする検証テストを定義します。</summary>
      <returns>検証テスト。</returns>
      <param name="errorMessage">検証が失敗した場合に表示するエラー メッセージ。</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Range(System.Double,System.Double,System.String)">
      <summary>10 進数が特定の範囲内に収まるかどうかをテストする検証テストを定義します。</summary>
      <returns>検証テスト。</returns>
      <param name="minValue">最小値。既定値は 0 です。</param>
      <param name="maxValue">最大値。</param>
      <param name="errorMessage">検証が失敗した場合に表示するエラー メッセージ。</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Range(System.Int32,System.Int32,System.String)">
      <summary>整数値が特定の範囲内に収まるかどうかをテストする検証テストを定義します。</summary>
      <returns>検証テスト。</returns>
      <param name="minValue">最小値。既定値は 0 です。</param>
      <param name="maxValue">最大値。</param>
      <param name="errorMessage">検証が失敗した場合に表示するエラー メッセージ。</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Regex(System.String,System.String)">
      <summary>正規表現として指定されているパターンに照らして、値をテストする検証テストを定義します。</summary>
      <returns>検証テスト。</returns>
      <param name="pattern">ユーザー入力のテストに使用する正規表現。</param>
      <param name="errorMessage">検証が失敗した場合に表示するエラー メッセージ。</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Required(System.String)">
      <summary>値が指定されているかどうかをテストする検証テストを定義します。</summary>
      <returns>検証テスト。</returns>
      <param name="errorMessage">検証が失敗した場合に表示するエラー メッセージ。</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.StringLength(System.Int32,System.Int32,System.String)">
      <summary>文字列の長さをテストする検証テストを定義します。</summary>
      <returns>検証テスト。</returns>
      <param name="maxLength">文字列の最大長。</param>
      <param name="minLength">文字列の最小長。既定値は 0 です。</param>
      <param name="errorMessage">検証が失敗した場合に表示するエラー メッセージ。</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Url(System.String)">
      <summary>値が正しい形式の URL であるかどうかをテストする検証テストを定義します。</summary>
      <returns>検証テスト。</returns>
      <param name="errorMessage">検証が失敗した場合に表示するエラー メッセージ。</param>
    </member>
    <member name="T:System.Web.WebPages.VirtualPathFactoryManager">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Web.WebPages.VirtualPathFactoryManager.CreateInstance(System.String)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Web.WebPages.VirtualPathFactoryManager.Exists(System.String)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Web.WebPages.VirtualPathFactoryManager.RegisterVirtualPathFactory(System.Web.WebPages.IVirtualPathFactory)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="T:System.Web.WebPages.WebPage">
      <summary>ASP.NET Razor ページを表します。</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPage.#ctor">
      <summary>派生クラスから呼び出されて、<see cref="T:System.Web.WebPages.WebPage" /> クラスに基づく新しいインスタンスを作成します。</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPage.Context">
      <summary>ページに関連付けられている <see cref="T:System.Web.HttpContextBase" /> オブジェクトを取得または設定します。</summary>
      <returns>現在のコンテキスト データ。</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPage.ExecutePageHierarchy">
      <summary>一連の依存ページ内のコードを実行します。</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPage.Html">
      <summary>ページに関連付けられている <see cref="T:System.Web.WebPages.Html.HtmlHelper" /> オブジェクトの参照を取得します。</summary>
      <returns>ページに HTML フォーム コントロールを表示できるオブジェクト。</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPage.InitializePage">
      <summary>
        <see cref="T:System.Web.WebPages.WebPage" /> クラスを継承するオブジェクトを初期化します。</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPage.Model">
      <summary>ページに関連付けられているモデルを取得します。</summary>
      <returns>ページのビュー データに関連付けられているモデルを表すオブジェクト。</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPage.ModelState">
      <summary>ページに関連付けられているモデルの状態を取得します。</summary>
      <returns>モデルの状態。</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPage.RegisterPageExecutor(System.Web.WebPages.IWebPageRequestExecutor)">
      <summary>ページの実行を処理し、ページのカスタム機能を実装するクラスのリストにクラスを追加します。</summary>
      <param name="executor">追加するクラス。</param>
    </member>
    <member name="M:System.Web.WebPages.WebPage.RenderPage(System.String,System.Object[])">
      <summary>コンテンツ ページを表示します。</summary>
      <returns>ページの出力を書き込むことができるオブジェクト。</returns>
      <param name="path">表示するページのパス。</param>
      <param name="data">ページに渡すデータ。</param>
    </member>
    <member name="P:System.Web.WebPages.WebPage.Validation">
      <summary>現在のページ コンテキストの検証ヘルパーを取得します。</summary>
      <returns>検証ヘルパー。</returns>
    </member>
    <member name="T:System.Web.WebPages.WebPageBase">
      <summary>ASP.NET Razor ページを表すクラスの基本クラスとして機能します。</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.#ctor">
      <summary>継承されたクラス インスタンスによって使用される <see cref="T:System.Web.WebPages.WebPageBase" /> クラスを初期化します。このコンストラクターは、継承されたクラスによってのみ呼び出すことができます。</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.ConfigurePage(System.Web.WebPages.WebPageBase)">
      <summary>派生クラスでオーバーライドされた場合、親 Web ページの構成に基づいて現在の Web ページを構成します。</summary>
      <param name="parentPage">構成情報の読み取り元の親ページ。</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.CreateInstanceFromVirtualPath(System.String)">
      <summary>指定された仮想パスを使用して、<see cref="T:System.Web.WebPages.WebPageBase" /> クラスの新しいインスタンスを作成します。</summary>
      <returns>新しい <see cref="T:System.Web.WebPages.WebPageBase" /> オブジェクト。</returns>
      <param name="virtualPath">インスタンスを作成するために使用する仮想パス。</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.CreatePageFromVirtualPath(System.String,System.Web.HttpContextBase,System.Func{System.String,System.Boolean},System.Web.WebPages.DisplayModeProvider,System.Web.WebPages.IDisplayMode)">
      <summary>virtualPath から WebPageBase インスタンスの作成を試行し、よりシンプルなメッセージで複雑なコンパイラの例外をラップします。</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.DefineSection(System.String,System.Web.WebPages.SectionWriter)">
      <summary>名前付きコンテンツ セクションを作成するときにコンテンツ ページによって呼び出されます。</summary>
      <param name="name">作成するセクションの名前。</param>
      <param name="action">新しいセクションで実行するアクションの種類。</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.ExecutePageHierarchy">
      <summary>依存 Web ページのセットでコードを実行します。</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.ExecutePageHierarchy(System.Web.WebPages.WebPageContext,System.IO.TextWriter)">
      <summary>指定されたパラメーターを使用して、依存 Web ページのセットでコードを実行します。</summary>
      <param name="pageContext">ページのコンテキスト データ。</param>
      <param name="writer">実行された HTML を書き込むときに使用するライター。</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.ExecutePageHierarchy(System.Web.WebPages.WebPageContext,System.IO.TextWriter,System.Web.WebPages.WebPageRenderingBase)">
      <summary>指定されたコンテキスト、ライター、およびスタート ページを使用して、依存 Web ページのセットでコードを実行します。</summary>
      <param name="pageContext">ページのコンテキスト データ。</param>
      <param name="writer">実行された HTML を書き込むときに使用するライター。</param>
      <param name="startPage">ページ階層で実行を開始するページ。</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.GetOutputWriter">
      <summary>ページを表示するために使用するテキスト ライター インスタンスを返します。</summary>
      <returns>テキスト ライター。</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.InitializePage">
      <summary>現在のページを初期化します。</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.IsSectionDefined(System.String)">
      <summary>指定されたセクションがページで定義されているかどうかを示す値を返します。</summary>
      <returns>指定されたセクションがページで定義されている場合は true。それ以外の場合は false。</returns>
      <param name="name">検索するセクションの名前。</param>
    </member>
    <member name="P:System.Web.WebPages.WebPageBase.Layout">
      <summary>レイアウト ページのパスを取得または設定します。</summary>
      <returns>レイアウト ページのパス。</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageBase.Output">
      <summary>ページの現在の <see cref="T:System.IO.TextWriter" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.IO.TextWriter" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageBase.OutputStack">
      <summary>現在のページ コンテキストの <see cref="T:System.IO.TextWriter" /> オブジェクトのスタックを取得します。</summary>
      <returns>
        <see cref="T:System.IO.TextWriter" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageBase.Page">
      <summary>ページ、レイアウト ページ、および部分ページで共有されるページ データへのプロパティに似たアクセスを提供します。</summary>
      <returns>ページ データを格納しているオブジェクト。</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageBase.PageData">
      <summary>ページ、レイアウト ページ、および部分ページで共有されるページ データへの配列に似たアクセスを提供します。</summary>
      <returns>ページ データを格納するディクショナリ。</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.PopContext">
      <summary>
        <see cref="P:System.Web.WebPages.WebPageBase.OutputStack" /> インスタンスの先頭からコンテキストを返し、削除します。</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.PushContext(System.Web.WebPages.WebPageContext,System.IO.TextWriter)">
      <summary>指定されたコンテキストを <see cref="P:System.Web.WebPages.WebPageBase.OutputStack" /> インスタンスの先頭に挿入します。</summary>
      <param name="pageContext">
        <see cref="P:System.Web.WebPages.WebPageBase.OutputStack" /> インスタンスにプッシュするページ コンテキスト。</param>
      <param name="writer">ページ コンテキストのライター。</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.RenderBody">
      <summary>レイアウト ページで、名前付きセクションにないコンテンツ ページの一部を表示します。</summary>
      <returns>表示する HTML コンテンツ。</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.RenderPage(System.String,System.Object[])">
      <summary>他のページ内のページのコンテンツを表示します。</summary>
      <returns>表示する HTML コンテンツ。</returns>
      <param name="path">表示するページのパス。</param>
      <param name="data">(省略可能) 表示するページに渡すデータの配列。表示されたページでこのパラメーターにアクセスするには、<see cref="P:System.Web.WebPages.WebPageBase.PageData" /> プロパティを使用します。</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.RenderSection(System.String)">
      <summary>レイアウト ページで、名前付きセクションのコンテンツを表示します。</summary>
      <returns>表示する HTML コンテンツ。</returns>
      <param name="name">表示するセクション。</param>
      <exception cref="T:System.Web.HttpException">
        <paramref name="name" /> セクションは、既に表示されています。または<paramref name="name" /> セクションは、必須としてマークされましたが見つかりませんでした。</exception>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.RenderSection(System.String,System.Boolean)">
      <summary>レイアウト ページで、名前付きセクションのコンテンツを表示し、そのセクションが必須かどうかを指定します。</summary>
      <returns>表示する HTML コンテンツ。</returns>
      <param name="name">表示するセクション。</param>
      <param name="required">セクションが必須であることを指定する場合は true。それ以外の場合は false。</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.Write(System.Object)">
      <summary>指定されたオブジェクトを HTML エンコードされた文字列として書き込みます。</summary>
      <param name="value">エンコードして書き込むオブジェクト。</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.Write(System.Web.WebPages.HelperResult)">
      <summary>指定された <see cref="T:System.Web.WebPages.HelperResult" /> オブジェクトを HTML エンコードされた文字列として書き込みます。</summary>
      <param name="result">エンコードして書き込むヘルパーの結果。</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.WriteLiteral(System.Object)">
      <summary>指定されたオブジェクトを、最初に HTML エンコードせずに書き込みます。</summary>
      <param name="value">書き込むオブジェクト。</param>
    </member>
    <member name="T:System.Web.WebPages.WebPageContext">
      <summary>Web アプリケーション、現在の HTTP 要求、現在の実行コンテキスト、およびページ表示データに関する詳細を参照するために <see cref="T:System.Web.WebPages.WebPage" /> オブジェクトによって使用されるデータを含みます。</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageContext.#ctor">
      <summary>
        <see cref="T:System.Web.WebPages.WebPageContext" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageContext.#ctor(System.Web.HttpContextBase,System.Web.WebPages.WebPageRenderingBase,System.Object)">
      <summary>指定されたコンテキスト、ページ、およびモデルを使用して、クラスの新しいインスタンスを初期化します。</summary>
      <param name="context">ページ コンテキストと関連付けるための HTTP 要求コンテキスト データ。</param>
      <param name="page">ページ、レイアウト ページ、および部分ページの間で共有するページ データ。</param>
      <param name="model">ビュー データに関連付けるモデル。</param>
    </member>
    <member name="P:System.Web.WebPages.WebPageContext.Current">
      <summary>ページに関連付けられている現在の <see cref="T:System.Web.WebPages.WebPageContext" /> オブジェクトの参照を取得します。</summary>
      <returns>現在のページ コンテキスト オブジェクト。</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageContext.Model">
      <summary>ページに関連付けられているモデルを取得します。</summary>
      <returns>ページのビュー データに関連付けられているモデルを表すオブジェクト。</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageContext.Page">
      <summary>ページに関連付けられている <see cref="T:System.Web.WebPages.WebPageRenderingBase" /> オブジェクトの参照を取得します。</summary>
      <returns>ページを表示するオブジェクト。</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageContext.PageData">
      <summary>ページ、レイアウト ページ、および部分ページの間で共有されるページ データを取得します。</summary>
      <returns>ページ データを格納するディクショナリ。</returns>
    </member>
    <member name="T:System.Web.WebPages.WebPageExecutingBase">
      <summary>Razor 構文を含む ASP.NET ページを実行および表示するために使用されるオブジェクトとメソッドを提供します。</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.#ctor">
      <summary>
        <see cref="T:System.Web.WebPages.WebPageExecutingBase" /> クラスの新しいインスタンスを初期化します。このコンストラクターは、継承されたクラスによってのみ呼び出すことができます。</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPageExecutingBase.App"></member>
    <member name="P:System.Web.WebPages.WebPageExecutingBase.AppState"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.BeginContext(System.Int32,System.Int32,System.Boolean)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.BeginContext(System.IO.TextWriter,System.Int32,System.Int32,System.Boolean)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.BeginContext(System.IO.TextWriter,System.String,System.Int32,System.Int32,System.Boolean)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.BeginContext(System.String,System.Int32,System.Int32,System.Boolean)"></member>
    <member name="P:System.Web.WebPages.WebPageExecutingBase.Context">
      <summary>派生クラスでオーバーライドされた場合、ページに関連付けられた <see cref="T:System.Web.HttpContextBase" /> オブジェクトを取得または設定します。</summary>
      <returns>現在のコンテキスト データ。</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.EndContext(System.Int32,System.Int32,System.Boolean)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.EndContext(System.IO.TextWriter,System.Int32,System.Int32,System.Boolean)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.EndContext(System.IO.TextWriter,System.String,System.Int32,System.Int32,System.Boolean)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.EndContext(System.String,System.Int32,System.Int32,System.Boolean)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.Execute"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.GetOutputWriter">
      <summary>ページを表示するために使用するテキスト ライター インスタンスを返します。</summary>
      <returns>テキスト ライター。</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.Href(System.String,System.Object[])"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.NormalizeLayoutPagePath(System.String)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.NormalizePath(System.String)"></member>
    <member name="P:System.Web.WebPages.WebPageExecutingBase.VirtualPath"></member>
    <member name="P:System.Web.WebPages.WebPageExecutingBase.VirtualPathFactory"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.Write(System.Object)">
      <summary>指定されたオブジェクトの文字列表現を HTML エンコードされた文字列として書き込みます。</summary>
      <param name="value">エンコードして書き込むオブジェクト。</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.Write(System.Web.WebPages.HelperResult)">
      <summary>指定された <see cref="T:System.Web.WebPages.HelperResult" /> オブジェクトを HTML エンコードされた文字列として書き込みます。</summary>
      <param name="result">エンコードして書き込むヘルパーの結果。</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteAttribute(System.String,System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.AttributeValue[])"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteAttributeTo(System.IO.TextWriter,System.String,System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.AttributeValue[])"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteAttributeTo(System.String,System.IO.TextWriter,System.String,System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.AttributeValue[])"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteLiteral(System.Object)">
      <summary>指定されたオブジェクトを HTML エンコードせずに書き込みます。</summary>
      <param name="value">書き込むオブジェクト。</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteLiteralTo(System.IO.TextWriter,System.Object)">
      <summary>指定されたオブジェクトを HTML エンコードせずに指定された <see cref="T:System.IO.TextWriter" /> インスタンスに書き込みます。</summary>
      <param name="writer">テキスト ライター。</param>
      <param name="content">書き込むオブジェクト。</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteTo(System.IO.TextWriter,System.Object)">
      <summary>指定されたオブジェクトを HTML エンコードされた文字列として、指定されたテキスト ライターに書き込みます。</summary>
      <param name="writer">テキスト ライター。</param>
      <param name="content">エンコードして書き込むオブジェクト。</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteTo(System.IO.TextWriter,System.Web.WebPages.HelperResult)">
      <summary>指定された <see cref="T:System.Web.WebPages.HelperResult" /> オブジェクトを HTML エンコードされた文字列として、指定されたテキスト ライターに書き込みます。</summary>
      <param name="writer">テキスト ライター。</param>
      <param name="content">エンコードして書き込むヘルパーの結果。</param>
    </member>
    <member name="T:System.Web.WebPages.WebPageHttpHandler">
      <summary>特定の URL 拡張子を処理するために使用するメソッドとプロパティを提供します。</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageHttpHandler.#ctor(System.Web.WebPages.WebPage)">
      <summary>指定された Web ページを使用して、<see cref="T:System.Web.WebPages.WebPageHttpHandler" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="webPage">処理する Web ページ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPage" /> が null です。</exception>
    </member>
    <member name="M:System.Web.WebPages.WebPageHttpHandler.CreateFromVirtualPath(System.String)">
      <summary>指定された仮想パスから新しい <see cref="T:System.Web.IHttpHandler" /> ハンドラー オブジェクトを作成します。</summary>
      <returns>指定された仮想パスの <see cref="T:System.Web.IHttpHandler" /> オブジェクト。</returns>
      <param name="virtualPath">ハンドラーを作成するために使用する仮想パス。</param>
    </member>
    <member name="P:System.Web.WebPages.WebPageHttpHandler.DisableWebPagesResponseHeader">
      <summary>Web ページ応答ヘッダーが無効かどうかを示す値を取得または設定します。</summary>
      <returns>Web ページ応答ヘッダーが無効の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageHttpHandler.GetRegisteredExtensions">
      <summary>現在の <see cref="T:System.Web.WebPages.WebPageHttpHandler" /> インスタンスで処理可能なファイル名拡張子のリストを返します。</summary>
      <returns>現在の <see cref="T:System.Web.WebPages.WebPageHttpHandler" /> インスタンスで処理されるファイル名拡張子の読み取り専用のリスト。</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageHttpHandler.IsReusable">
      <summary>別の要求で <see cref="T:System.Web.WebPages.WebPageHttpHandler" /> インスタンスを使用できるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Web.WebPages.WebPageHttpHandler" /> インスタンスが再利用可能な場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageHttpHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>指定されたコンテキストを使用して、Web ページを処理します。</summary>
      <param name="context">Web ページの処理時に使用するコンテキスト。</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageHttpHandler.RegisterExtension(System.String)">
      <summary>現在の <see cref="T:System.Web.WebPages.WebPageHttpHandler" /> インスタンスで処理される拡張子のリストにファイル名拡張子を追加します。</summary>
      <param name="extension">追加する拡張子 (先頭にピリオドは付けません)。</param>
    </member>
    <member name="F:System.Web.WebPages.WebPageHttpHandler.WebPagesVersionHeaderName">
      <summary>この Web ページで使用されている ASP.NET Web Pages 仕様のバージョンの HTML タグ名 (X-AspNetWebPages-Version)。</summary>
    </member>
    <member name="T:System.Web.WebPages.WebPageRenderingBase">
      <summary>Razor ビュー エンジンを使用するページを表示するために使用するメソッドとプロパティを提供します。</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageRenderingBase.#ctor">
      <summary>
        <see cref="T:System.Web.WebPages.WebPageRenderingBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Cache"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Culture"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.DisplayMode"></member>
    <member name="M:System.Web.WebPages.WebPageRenderingBase.ExecutePageHierarchy">
      <summary>派生クラスでオーバーライドされた場合、ページの初期化に使用するメソッドを呼び出します。</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.IsAjax"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.IsPost"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Layout">
      <summary>派生クラスでオーバーライドされた場合、レイアウト ページのパスを取得または設定します。</summary>
      <returns>レイアウト ページのパス。</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Page">
      <summary>派生クラスでオーバーライドされた場合、ページ、レイアウト ページ、部分ページ間で共有されるページ データへのプロパティに似たアクセスを提供します。</summary>
      <returns>ページ データを格納しているオブジェクト。</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.PageContext"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.PageData">
      <summary>派生クラスでオーバーライドされ多場合、ページ、レイアウト ページ、部分ページ間で共有されるページ データへの配列に似たアクセスを提供します。</summary>
      <returns>ページ データへの配列に似たアクセスを提供するオブジェクト。</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Profile"></member>
    <member name="M:System.Web.WebPages.WebPageRenderingBase.RenderPage(System.String,System.Object[])">
      <summary>派生クラスでオーバーライドされた場合、Web ページを表示します。</summary>
      <returns>Web ページを表すマークアップ。</returns>
      <param name="path">表示するページのパス。</param>
      <param name="data">ビューを表示するために使用する追加のデータ。</param>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Request"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Response"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Server"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Session"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.TemplateInfo"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.UICulture"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.UrlData"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.User"></member>
    <member name="T:System.Web.WebPages.Html.HtmlHelper">
      <summary>HTML フォームのコントロールの表示および Web ページでのフォーム検証の実行をサポートします。</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.AnonymousObjectToHtmlAttributes(System.Object)">
      <summary>入力オブジェクトから HTML 属性の辞書を作成し、アンダースコアをダッシュに変換します。</summary>
      <returns>HTML 属性を表す辞書。</returns>
      <param name="htmlAttributes">HTML 属性を記述する匿名オブジェクト。</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.AttributeEncode(System.Object)">
      <summary>引用符で囲まれた HTML 属性にのみ適した最小限のエンコードを使用して、指定されたオブジェクトを表す HTML エンコード文字列を返します。</summary>
      <returns>オブジェクトを表す HTML エンコードされた文字列。</returns>
      <param name="value">エンコードするオブジェクト。</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.AttributeEncode(System.String)">
      <summary>引用符で囲まれた HTML 属性にのみ適した最小限のエンコードを使用して、指定された文字列を表す HTML エンコード文字列を返します。</summary>
      <returns>元の文字列を表す HTML エンコードされた文字列。</returns>
      <param name="value">エンコードする文字列。</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String)">
      <summary>指定された名前を持つ、HTML チェック ボックス コントロールを返します。</summary>
      <returns>チェック ボックス コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML コントロール要素の name 属性に割り当てる値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Boolean)">
      <summary>指定された名前と既定のオン/オフ状態を持つ、HTML チェック ボックス コントロールを返します。</summary>
      <returns>チェック ボックス コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML コントロール要素の name 属性に割り当てる値。</param>
      <param name="isChecked">checked 属性が checked に設定されていることを示す場合は true、それ以外の場合は false。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>指定された名前、既定のオン/オフ状態、および属性ディクショナリによって定義されたカスタム属性を持つ、HTML チェック ボックス コントロールを返します。</summary>
      <returns>チェック ボックス コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML コントロール要素の name 属性に割り当てる値。</param>
      <param name="isChecked">checked 属性が checked に設定されていることを示す場合は true、それ以外の場合は false。</param>
      <param name="htmlAttributes">この要素のカスタム属性の名前と値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Boolean,System.Object)">
      <summary>指定された名前、既定のオン/オフ状態、および属性オブジェクトによって定義されたカスタム属性を持つ、HTML チェック ボックス コントロールを返します。</summary>
      <returns>チェック ボックス コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML コントロール要素の name 属性に割り当てる値。</param>
      <param name="isChecked">checked 属性が checked に設定されていることを示す場合は true、それ以外の場合は false。</param>
      <param name="htmlAttributes">この要素のカスタム属性を格納するオブジェクト。属性の名前と値は、オブジェクトのプロパティを調べることでリフレクションを介して取得されます。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>指定された名前および属性ディクショナリによって定義されたカスタム属性を持つ、HTML チェック ボックス コントロールを返します。</summary>
      <returns>チェック ボックス コントロールを表す HTML マークアップ。</returns>
      <param name="name"> HTML コントロール要素の name 属性に割り当てる値。</param>
      <param name="htmlAttributes">この要素のカスタム属性の名前と値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Object)">
      <summary>指定された名前および属性オブジェクトによって定義されたカスタム属性を持つ、HTML チェック ボックス コントロールを返します。</summary>
      <returns>チェック ボックス コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML コントロール要素の name 属性に割り当てる値。</param>
      <param name="htmlAttributes">この要素のカスタム属性を格納するオブジェクト。属性の名前と値は、オブジェクトのプロパティを調べることでリフレクションを介して取得されます。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem})">
      <summary>指定された名前を持ち、指定されたリスト項目を含む、HTML ドロップダウン リスト コントロールを返します。</summary>
      <returns>ドロップダウン リスト コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML select 要素の name 属性に割り当てる値。</param>
      <param name="selectList">リストの値の設定に使用される <see cref="T:System.Web.WebPages.Html.SelectListItem" /> インスタンスの一覧。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>指定された名前および属性ディクショナリによって定義されたカスタム属性を持ち、指定されたリスト項目を含む、HTML ドロップダウン リスト コントロールを返します。</summary>
      <returns>ドロップダウン リスト コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML select 要素の name 属性に割り当てる値。</param>
      <param name="selectList">リストの値の設定に使用される <see cref="T:System.Web.WebPages.Html.SelectListItem" /> インスタンスの一覧。</param>
      <param name="htmlAttributes">この要素のカスタム属性の名前と値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object)">
      <summary>指定された名前および属性オブジェクトによって定義されたカスタム属性を持ち、指定されたリスト項目を含む、HTML ドロップダウン リスト コントロールを返します。</summary>
      <returns>ドロップダウン リスト コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML select 要素の name 属性に割り当てる値。</param>
      <param name="selectList">リストの値の設定に使用される <see cref="T:System.Web.WebPages.Html.SelectListItem" /> インスタンスの一覧。</param>
      <param name="htmlAttributes">この要素のカスタム属性を格納するオブジェクト。属性の名前と値は、オブジェクトのプロパティを調べることでリフレクションを介して取得されます。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem})">
      <summary>指定された名前を持ち、指定されたリスト項目および既定の項目を含む、HTML ドロップダウン リスト コントロールを返します。</summary>
      <returns>ドロップダウン リスト コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML select 要素の name 属性に割り当てる値。</param>
      <param name="defaultOption">リストの既定のオプションとして表示するテキスト。</param>
      <param name="selectList">リストの値の設定に使用される <see cref="T:System.Web.WebPages.Html.SelectListItem" /> インスタンスの一覧。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>指定された名前および属性ディクショナリによって定義されたカスタム属性を持ち、指定されたリスト項目および既定の項目を含む、HTML ドロップダウン リスト コントロールを返します。</summary>
      <returns>ドロップダウン リスト コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML select 要素の name 属性に割り当てる値。</param>
      <param name="defaultOption">リストの既定のオプションとして表示するテキスト。</param>
      <param name="selectList">リストの値の設定に使用される <see cref="T:System.Web.WebPages.Html.SelectListItem" /> インスタンスの一覧。</param>
      <param name="htmlAttributes">この要素のカスタム属性の名前と値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object)">
      <summary>指定された名前および属性オブジェクトによって定義されたカスタム属性を持ち、指定されたリスト項目および既定の項目を含む、HTML ドロップダウン リスト コントロールを返します。</summary>
      <returns>ドロップダウン リスト コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML select 要素の name 属性に割り当てる値。</param>
      <param name="defaultOption">リストの既定のオプションとして表示するテキスト。</param>
      <param name="selectList">リストの値の設定に使用される <see cref="T:System.Web.WebPages.Html.SelectListItem" /> インスタンスの一覧。</param>
      <param name="htmlAttributes">この要素のカスタム属性を格納するオブジェクト。属性の名前と値は、オブジェクトのプロパティを調べることでリフレクションを介して取得されます。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>指定された名前、属性ディクショナリによって定義されたカスタム属性、および既定の選択を持ち、指定されたリスト項目および既定の項目を含む、HTML ドロップダウン リスト コントロールを返します。</summary>
      <returns>ドロップダウン リスト コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML select 要素の name 属性に割り当てる値。</param>
      <param name="defaultOption">リストの既定のオプションとして表示するテキスト。</param>
      <param name="selectList">リストの値の設定に使用される <see cref="T:System.Web.WebPages.Html.SelectListItem" /> インスタンスの一覧。</param>
      <param name="selectedValue">リスト内の、既定で選択されている項目を指定する値。選択される項目は、値がパラメーターと一致する (または、値がない場合は、テキストが一致する) リスト内の最初の項目です。</param>
      <param name="htmlAttributes">この要素のカスタム属性の名前と値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Object)">
      <summary>指定された名前、属性オブジェクトによって定義されたカスタム属性、および既定の選択を持ち、指定されたリスト項目および既定の項目を含む、HTML ドロップダウン リスト コントロールを返します。</summary>
      <returns>ドロップダウン リスト コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML select 要素の name 属性に割り当てる値。</param>
      <param name="defaultOption">リストの既定のオプションとして表示するテキスト。</param>
      <param name="selectList">リストの値の設定に使用される <see cref="T:System.Web.WebPages.Html.SelectListItem" /> インスタンスの一覧。</param>
      <param name="selectedValue">リスト内の、既定で選択されている項目を指定する値。選択される項目は、値がパラメーターと一致するリスト内の最初の項目、または項目に値がない場合は項目の表示テキストが一致するリスト内の最初の項目です。</param>
      <param name="htmlAttributes">この要素のカスタム属性を格納するオブジェクト。属性の名前と値は、オブジェクトのプロパティを調べることでリフレクションを介して取得されます。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Encode(System.Object)">
      <summary>任意の HTML に適した完全なエンコードを使用して、指定されたオブジェクトを表す HTML エンコード文字列を返します。</summary>
      <returns>オブジェクトを表す HTML エンコードされた文字列。</returns>
      <param name="value">エンコードするオブジェクト。</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Encode(System.String)">
      <summary>任意の HTML に適した完全なエンコードを使用して、指定された文字列を表す HTML エンコード文字列を返します。</summary>
      <returns>元の文字列を表す HTML エンコードされた文字列。</returns>
      <param name="value">エンコードする文字列。</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Hidden(System.String)">
      <summary>指定された名前を持つ、HTML 非表示コントロールを返します。</summary>
      <returns>非表示コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML コントロール要素の name 属性に割り当てる値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Hidden(System.String,System.Object)">
      <summary>指定された名前と値を持つ、HTML 非表示コントロールを返します。</summary>
      <returns>非表示コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML コントロール要素の name 属性に割り当てる値。</param>
      <param name="value">この要素の value 属性に割り当てる値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Hidden(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>指定された名前、値、および属性ディクショナリによって定義されたカスタム属性を持つ、HTML 非表示コントロールを返します。</summary>
      <returns>非表示コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML コントロール要素の name 属性に割り当てる値。</param>
      <param name="value">この要素の value 属性に割り当てる値。</param>
      <param name="htmlAttributes">この要素のカスタム属性の名前と値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Hidden(System.String,System.Object,System.Object)">
      <summary>指定された名前、値、および属性オブジェクトによって定義されたカスタム属性を持つ、HTML 非表示コントロールを返します。</summary>
      <returns>非表示コントロールを表す HTML マークアップ。</returns>
      <param name="name"> HTML コントロール要素の name 属性に割り当てる値。</param>
      <param name="value">この要素の value 属性に割り当てる値。</param>
      <param name="htmlAttributes">この要素のカスタム属性を格納するオブジェクト。属性の名前と値は、オブジェクトのプロパティを調べることでリフレクションを介して取得されます。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.IdAttributeDotReplacement">
      <summary>表示されるフォーム コントロールの id 属性内のドット (.) を置き換えるために使用する文字を取得または設定します。</summary>
      <returns>表示されるフォーム コントロールの id 属性内のドットを置き換えるために使用する文字。既定値はアンダースコア (_) です。</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String)">
      <summary>指定されたテキストを表示する HTML ラベルを返します。</summary>
      <returns>ラベルを表す HTML マークアップ。</returns>
      <param name="labelText">表示するテキスト。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="labelText" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String,System.Object)">
      <summary>指定されたテキストを表示し、指定されたカスタム属性を持つ、HTML ラベルを返します。</summary>
      <returns>ラベルを表す HTML マークアップ。</returns>
      <param name="labelText">表示するテキスト。</param>
      <param name="attributes">この要素のカスタム属性を格納するオブジェクト。属性の名前と値は、オブジェクトのプロパティを調べることでリフレクションを介して取得されます。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="labelText" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String,System.String)">
      <summary>指定されたテキストを表示し、指定された for 属性を持つ、HTML ラベルを返します。</summary>
      <returns>ラベルを表す HTML マークアップ。</returns>
      <param name="labelText">表示するテキスト。</param>
      <param name="labelFor">HTML コントロール要素の for 属性に割り当てる値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="labelText" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>指定されたテキストを表示し、指定された for 属性および属性ディクショナリで定義されたカスタム属性を持つ、HTML ラベルを返します。</summary>
      <returns>ラベルを表す HTML マークアップ。</returns>
      <param name="labelText">表示するテキスト。</param>
      <param name="labelFor">HTML コントロール要素の for 属性に割り当てる値。</param>
      <param name="attributes">この要素のカスタム属性の名前と値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="labelText" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String,System.String,System.Object)">
      <summary>指定されたテキストを表示し、指定された for 属性および属性オブジェクトで定義されたカスタム属性を持つ、HTML ラベルを返します。</summary>
      <returns>ラベルを表す HTML マークアップ。</returns>
      <param name="labelText">表示するテキスト。</param>
      <param name="labelFor">HTML コントロール要素の for 属性に割り当てる値。</param>
      <param name="attributes">この要素のカスタム属性を格納するオブジェクト。属性の名前と値は、オブジェクトのプロパティを調べることでリフレクションを介して取得されます。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="labelText" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem})">
      <summary>指定された名前を持ち、指定されたリスト項目を含む、HTML リスト ボックス コントロールを返します。</summary>
      <returns>リスト ボックス コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML select 要素の name 属性に割り当てる値。</param>
      <param name="selectList">リストの値の設定に使用される <see cref="T:System.Web.WebPages.Html.SelectListItem" /> インスタンスの一覧。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>指定された名前および属性ディクショナリによって定義されたカスタム属性を持ち、指定されたリスト項目を含む、HTML リスト ボックス コントロールを返します。</summary>
      <returns>リスト ボックス コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML select 要素の name 属性に割り当てる値。</param>
      <param name="selectList">リストの値の設定に使用される <see cref="T:System.Web.WebPages.Html.SelectListItem" /> インスタンスの一覧。</param>
      <param name="htmlAttributes">この要素のカスタム属性の名前と値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object)">
      <summary>指定された名前および属性オブジェクトによって定義されたカスタム属性を持ち、指定されたリスト項目を含む、HTML リスト ボックス コントロールを返します。</summary>
      <returns>リスト ボックス コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML select 要素の name 属性に割り当てる値。</param>
      <param name="selectList">リストの値の設定に使用される <see cref="T:System.Web.WebPages.Html.SelectListItem" /> インスタンスの一覧。</param>
      <param name="htmlAttributes">この要素のカスタム属性を格納するオブジェクト。属性の名前と値は、オブジェクトのプロパティを調べることでリフレクションを介して取得されます。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Int32,System.Boolean)">
      <summary>指定された名前、サイズ、リスト項目、既定の選択を持ち、複数の選択が可能かどうかを指定する、HTML リスト ボックス コントロールを返します。</summary>
      <returns>リスト ボックス コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML select 要素の name 属性に割り当てる値。</param>
      <param name="selectList">リストの値の設定に使用される <see cref="T:System.Web.WebPages.Html.SelectListItem" /> インスタンスの一覧。</param>
      <param name="selectedValues">リスト内の、既定で選択されている項目を指定するオブジェクト。オブジェクトのプロパティを調べることで、リフレクションを介して選択が取得されます。</param>
      <param name="size">この要素の size 属性に割り当てる値。</param>
      <param name="allowMultiple">複数の選択が可能であることを示す場合は true、それ以外の場合は false。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem})">
      <summary>指定された名前を持ち、指定されたリスト項目および既定の項目を含む、HTML リスト ボックス コントロールを返します。</summary>
      <returns>リスト ボックス コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML select 要素の name 属性に割り当てる値。</param>
      <param name="defaultOption">リストの既定のオプションとして表示するテキスト。</param>
      <param name="selectList">リスト ボックスを設定するために使用される <see cref="T:System.Web.WebPages.Html.SelectListItem" /> インスタンスの一覧。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>指定された名前および属性ディクショナリによって定義されたカスタム属性を持ち、指定されたリスト項目および既定の項目を含む、HTML リスト ボックス コントロールを返します。</summary>
      <returns>リスト ボックス コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML select 要素の name 属性に割り当てる値。</param>
      <param name="defaultOption">リストの既定のオプションとして表示するテキスト。</param>
      <param name="selectList">リストの値の設定に使用される <see cref="T:System.Web.WebPages.Html.SelectListItem" /> インスタンスの一覧。</param>
      <param name="htmlAttributes">この要素のカスタム属性の名前と値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object)">
      <summary>指定された名前および属性オブジェクトによって定義されたカスタム属性を持ち、指定されたリスト項目および既定の項目を含む、HTML リスト ボックス コントロールを返します。</summary>
      <returns>リスト ボックス コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML select 要素の name 属性に割り当てる値。</param>
      <param name="defaultOption">リストの既定のオプションとして表示するテキスト。</param>
      <param name="selectList">リスト ボックスを設定するために使用される <see cref="T:System.Web.WebPages.Html.SelectListItem" /> インスタンスの一覧。</param>
      <param name="htmlAttributes">この要素のカスタム属性を格納するオブジェクト。属性の名前と値は、オブジェクトのプロパティを調べることでリフレクションを介して取得されます。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>指定された名前および属性ディクショナリによって定義されたカスタム属性を持ち、指定されたリスト項目、既定の項目、および選択を含む、HTML リスト ボックス コントロールを返します。</summary>
      <returns>リスト ボックス コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML select 要素の name 属性に割り当てる値。</param>
      <param name="defaultOption">リストの既定のオプションとして表示するテキスト。</param>
      <param name="selectList">リストの値の設定に使用される <see cref="T:System.Web.WebPages.Html.SelectListItem" /> インスタンスの一覧。</param>
      <param name="selectedValues">リスト内の、既定で選択されている項目を指定するオブジェクト。オブジェクトのプロパティを調べることで、リフレクションを介して選択が取得されます。</param>
      <param name="htmlAttributes">この要素のカスタム属性の名前と値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Int32,System.Boolean)">
      <summary>指定された名前、サイズ、項目、既定の項目、および選択を持ち、複数の選択が可能かどうかを指定する、HTML リスト ボックス コントロールを返します。</summary>
      <returns>リスト ボックス コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML select 要素の name 属性に割り当てる値。</param>
      <param name="defaultOption">リストの既定のオプションとして表示するテキスト。</param>
      <param name="selectList">リストの値の設定に使用される <see cref="T:System.Web.WebPages.Html.SelectListItem" /> インスタンスの一覧。</param>
      <param name="selectedValues">リスト内の、既定で選択されている項目を指定するオブジェクト。オブジェクトのプロパティを調べることで、リフレクションを介して選択が取得されます。</param>
      <param name="size">この要素の size 属性に割り当てる値。</param>
      <param name="allowMultiple">複数の選択が可能であることを示す場合は true、それ以外の場合は false。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Int32,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>指定された名前、サイズ、属性ディクショナリによって定義されたカスタム属性、項目、既定の項目、および選択を持ち、複数の選択が可能かどうかを指定する、HTML リスト ボックス コントロールを返します。</summary>
      <returns>リスト ボックス コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML select 要素の name 属性に割り当てる値。</param>
      <param name="defaultOption">リストの既定のオプションとして表示するテキスト。</param>
      <param name="selectList">リストの値の設定に使用される <see cref="T:System.Web.WebPages.Html.SelectListItem" /> インスタンスの一覧。</param>
      <param name="selectedValues">リスト内の、既定で選択されている項目を指定するオブジェクト。オブジェクトのプロパティを調べることで、リフレクションを介して選択が取得されます。</param>
      <param name="size">この要素の size 属性に割り当てる値。</param>
      <param name="allowMultiple">複数の選択が可能であることを示す場合は true、それ以外の場合は false。</param>
      <param name="htmlAttributes">この要素のカスタム属性の名前と値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Int32,System.Boolean,System.Object)">
      <summary>指定された名前、サイズ、属性オブジェクトによって定義されたカスタム属性、項目、既定の項目、および選択を持ち、複数の選択が可能かどうかを指定する、HTML リスト ボックス コントロールを返します。</summary>
      <returns>リスト ボックス コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML select 要素の name 属性に割り当てる値。</param>
      <param name="defaultOption">リストの既定のオプションとして表示するテキスト。</param>
      <param name="selectList">リストの値の設定に使用される <see cref="T:System.Web.WebPages.Html.SelectListItem" /> インスタンスの一覧。</param>
      <param name="selectedValues">リスト内の、既定で選択されている項目を指定するオブジェクト。オブジェクトのプロパティを調べることで、リフレクションを介して選択が取得されます。</param>
      <param name="size">この要素の size 属性に割り当てる値。</param>
      <param name="allowMultiple">複数の選択が可能であることを示す場合は true、それ以外の場合は false。</param>
      <param name="htmlAttributes">この要素のカスタム属性を格納するオブジェクト。属性の名前と値は、オブジェクトのプロパティを調べることでリフレクションを介して取得されます。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Object)">
      <summary>指定された名前、項目、既定の項目、属性オブジェクトによって定義されたカスタム属性、および選択を持つ、HTML リスト ボックス コントロールを返します。</summary>
      <returns>リスト ボックス コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML select 要素の name 属性に割り当てる値。</param>
      <param name="defaultOption">リストの既定のオプションとして表示するテキスト。</param>
      <param name="selectList">リストの値の設定に使用される <see cref="T:System.Web.WebPages.Html.SelectListItem" /> インスタンスの一覧。</param>
      <param name="selectedValues">リスト内の、既定で選択されている項目を指定するオブジェクト。オブジェクトのプロパティを調べることで、リフレクションを介して選択が取得されます。</param>
      <param name="htmlAttributes">この要素のカスタム属性を格納するオブジェクト。属性の名前と値は、オブジェクトのプロパティを調べることでリフレクションを介して取得されます。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ObjectToDictionary(System.Object)">
      <summary>関連付けられた値が含まれるキーとして各パブリック インスタンスのプロパティを辞書に追加することで、オブジェクトから辞書を作成します。派生型からのパブリック プロパティも公開します。これは通常、匿名型のオブジェクトで使用されます。</summary>
      <returns>プロパティの名前とプロパティの値で作成された辞書。</returns>
      <param name="value">変換されるオブジェクト。</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Password(System.String)">
      <summary>指定された名前を持つ、HTML パスワード コントロールを返します。</summary>
      <returns>パスワード コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML コントロール要素の name 属性に割り当てる値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Password(System.String,System.Object)">
      <summary>指定された名前と値を持つ、HTML パスワード コントロールを返します。</summary>
      <returns>パスワード コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML コントロール要素の name 属性に割り当てる値。</param>
      <param name="value">この要素の value 属性に割り当てる値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Password(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>指定された名前、値、および属性ディクショナリによって定義されたカスタム属性を持つ、HTML パスワード コントロールを返します。</summary>
      <returns>パスワード コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML コントロール要素の name 属性に割り当てる値。</param>
      <param name="value">この要素の value 属性に割り当てる値。</param>
      <param name="htmlAttributes">この要素のカスタム属性の名前と値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Password(System.String,System.Object,System.Object)">
      <summary>指定された名前、値、および属性オブジェクトによって定義されたカスタム属性を持つ、HTML パスワード コントロールを返します。</summary>
      <returns>パスワード コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML コントロール要素の name 属性に割り当てる値。</param>
      <param name="value">この要素の value 属性に割り当てる値。</param>
      <param name="htmlAttributes">この要素のカスタム属性を格納するオブジェクト。属性の名前と値は、オブジェクトのプロパティを調べることでリフレクションを介して取得されます。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object)">
      <summary>指定された名前と値を持つ、HTML ラジオ ボタン コントロールを返します。</summary>
      <returns>ラジオ ボタン コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML コントロール要素の name 属性に割り当てる値。name 属性は、ラジオ ボタンが属しているグループを定義します。</param>
      <param name="value">この要素の value 属性に割り当てる値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Boolean)">
      <summary>指定された名前、値、および既定の選択された状態を持つ、HTML ラジオ ボタン コントロールを返します。</summary>
      <returns>ラジオ ボタン コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML コントロール要素の name 属性に割り当てる値。name 属性は、ラジオ ボタンが属しているグループを定義します。</param>
      <param name="value">この要素の value 属性に割り当てる値。</param>
      <param name="isChecked">コントロールが選択されていることを示す場合は true、それ以外の場合は false。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>指定された名前、値、既定の選択された状態、および属性ディクショナリによって定義されたカスタム属性を持つ、HTML ラジオ ボタン コントロールを返します。</summary>
      <returns>ラジオ ボタン コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML コントロール要素の name 属性に割り当てる値。name 属性は、ラジオ ボタンが属しているグループを定義します。</param>
      <param name="value">この要素の value 属性に割り当てる値。</param>
      <param name="isChecked">コントロールが選択されていることを示す場合は true、それ以外の場合は false。</param>
      <param name="htmlAttributes">この要素のカスタム属性の名前と値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Boolean,System.Object)">
      <summary>指定された名前、値、既定の選択された状態、および属性オブジェクトによって定義されたカスタム属性を持つ、HTML ラジオ ボタン コントロールを返します。</summary>
      <returns>ラジオ ボタン コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML コントロール要素の name 属性に割り当てる値。name 属性は、ラジオ ボタンが属しているグループを定義します。</param>
      <param name="value">この要素の value 属性に割り当てる値。</param>
      <param name="isChecked">コントロールが選択されていることを示す場合は true、それ以外の場合は false。</param>
      <param name="htmlAttributes">この要素のカスタム属性を格納するオブジェクト。属性の名前と値は、オブジェクトのプロパティを調べることでリフレクションを介して取得されます。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>指定された名前、値、および属性ディクショナリによって定義されたカスタム属性を持つ、HTML ラジオ ボタン コントロールを返します。</summary>
      <returns>ラジオ ボタン コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML コントロール要素の name 属性に割り当てる値。name 属性は、ラジオ ボタンが属しているグループを定義します。</param>
      <param name="value">この要素の value 属性に割り当てる値。</param>
      <param name="htmlAttributes">この要素のカスタム属性の名前と値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Object)">
      <summary>指定された名前、値、および属性オブジェクトによって定義されたカスタム属性を持つ、HTML ラジオ ボタン コントロールを返します。</summary>
      <returns>ラジオ ボタン コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML コントロール要素の name 属性に割り当てる値。name 属性は、ラジオ ボタンが属しているグループを定義します。</param>
      <param name="value">この要素の value 属性に割り当てる値。</param>
      <param name="htmlAttributes">この要素のカスタム属性を格納するオブジェクト。属性の名前と値は、オブジェクトのプロパティを調べることでリフレクションを介して取得されます。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Raw(System.Object)">
      <summary>HTML マークアップを <see cref="T:System.Web.HtmlString" /> インスタンス内にラップして、インスタンスが HTML マークアップとして解釈されるようにします。</summary>
      <returns>エンコードされていない HTML。</returns>
      <param name="value">HTML を表示する対象のオブジェクト。</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Raw(System.String)">
      <summary>HTML マークアップを <see cref="T:System.Web.HtmlString" /> インスタンス内にラップして、インスタンスが HTML マークアップとして解釈されるようにします。</summary>
      <returns>エンコードされていない HTML。</returns>
      <param name="value">HTML エンコードではなく HTML マークアップとして解釈する文字列。</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String)">
      <summary>指定された名前を持つ、HTML 複数行テキスト入力 (テキスト領域) コントロールを返します。</summary>
      <returns>テキスト領域コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML textarea 要素の name 属性に割り当てる値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>指定された名前および属性ディクショナリによって定義されたカスタム属性を持つ、HTML 複数行テキスト入力 (テキスト領域) コントロールを返します。</summary>
      <returns>テキスト領域コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML textarea 要素の name 属性に割り当てる値。</param>
      <param name="htmlAttributes">この要素のカスタム属性の名前と値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.Object)">
      <summary>指定された名前および属性オブジェクトによって定義されたカスタム属性を持つ、HTML 複数行テキスト入力 (テキスト領域) コントロールを返します。</summary>
      <returns>テキスト領域コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML textarea 要素の name 属性に割り当てる値。</param>
      <param name="htmlAttributes">この要素のカスタム属性を格納するオブジェクト。属性の名前と値は、オブジェクトのプロパティを調べることでリフレクションを介して取得されます。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String)">
      <summary>指定された名前と値を持つ、HTML 複数行テキスト入力 (テキスト領域) コントロールを返します。</summary>
      <returns>テキスト領域コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML の textrarea 要素の name 属性に割り当てる値。</param>
      <param name="value">表示するテキスト。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>指定された名前、値、および属性ディクショナリによって定義されたカスタム属性を持つ、HTML 複数行テキスト入力 (テキスト領域) コントロールを返します。</summary>
      <returns>テキスト領域コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML textarea 要素の name 属性に割り当てる値。</param>
      <param name="value">表示するテキスト。</param>
      <param name="htmlAttributes">この要素のカスタム属性の名前と値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>指定された名前、値、row 属性、col 属性、および属性ディクショナリによって定義されたカスタム属性を持つ、HTML 複数行テキスト入力 (テキスト領域) コントロールを返します。</summary>
      <returns>テキスト領域コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML textarea 要素の name 属性に割り当てる値。</param>
      <param name="value">表示するテキスト。</param>
      <param name="rows">この要素の rows 属性に割り当てる値。</param>
      <param name="columns">この要素の cols 属性に割り当てる値。</param>
      <param name="htmlAttributes">この要素のカスタム属性の名前と値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String,System.Int32,System.Int32,System.Object)">
      <summary>指定された名前、値、row 属性、col 属性、および属性オブジェクトによって定義されたカスタム属性を持つ、HTML 複数行テキスト入力 (テキスト領域) コントロールを返します。</summary>
      <returns>テキスト領域コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML textarea 要素の name 属性に割り当てる値。</param>
      <param name="value">表示するテキスト。</param>
      <param name="rows">この要素の rows 属性に割り当てる値。</param>
      <param name="columns">この要素の cols 属性に割り当てる値。</param>
      <param name="htmlAttributes">この要素のカスタム属性を格納するオブジェクト。属性の名前と値は、オブジェクトのプロパティを調べることでリフレクションを介して取得されます。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String,System.Object)">
      <summary>指定された名前、値、および属性オブジェクトによって定義されたカスタム属性を持つ、HTML 複数行テキスト入力 (テキスト領域) コントロールを返します。</summary>
      <returns>テキスト領域コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML textarea 要素の name 属性に割り当てる値。</param>
      <param name="value">表示するテキスト。</param>
      <param name="htmlAttributes">この要素のカスタム属性を格納するオブジェクト。属性の名前と値は、オブジェクトのプロパティを調べることでリフレクションを介して取得されます。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextBox(System.String)">
      <summary>指定された名前を持つ、HTML テキスト コントロールを返します。</summary>
      <returns>テキスト コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML コントロール要素の name 属性に割り当てる値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextBox(System.String,System.Object)">
      <summary>指定された名前と値を持つ、HTML テキスト コントロールを返します。</summary>
      <returns>テキスト コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML コントロール要素の name 属性に割り当てる値。</param>
      <param name="value">この要素の value 属性に割り当てる値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextBox(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>指定された名前、値、および属性ディクショナリによって定義されたカスタム属性を持つ、HTML テキスト コントロールを返します。</summary>
      <returns>テキスト コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML コントロール要素の name 属性に割り当てる値。</param>
      <param name="value">この要素の value 属性に割り当てる値。</param>
      <param name="htmlAttributes">この要素のカスタム属性の名前と値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextBox(System.String,System.Object,System.Object)">
      <summary>指定された名前、値、および属性オブジェクトによって定義されたカスタム属性を持つ、HTML テキスト コントロールを返します。</summary>
      <returns>テキスト コントロールを表す HTML マークアップ。</returns>
      <param name="name">HTML コントロール要素の name 属性に割り当てる値。</param>
      <param name="value">この要素の value 属性に割り当てる値。</param>
      <param name="htmlAttributes">この要素のカスタム属性を格納するオブジェクト。属性の名前と値は、オブジェクトのプロパティを調べることでリフレクションを介して取得されます。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.UnobtrusiveJavaScriptEnabled">
      <summary>ページが Ajax 機能に対して控えめな JavaScript を使用するかどうかを示す値を取得または設定します。</summary>
      <returns>ページが控え目な JavaScript を使用する場合は true、それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationInputCssClassName">
      <summary>検証が失敗したときの input 要素の外観を定義している CSS クラスの名前を取得または設定します。</summary>
      <returns>CSS クラスの名前。既定値は、field-validation-error です。</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationInputValidCssClassName">
      <summary>検証が成功したときの input 要素の外観を定義している CSS クラスの名前を取得または設定します。</summary>
      <returns>CSS クラスの名前。既定値は、input-validation-valid です。</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String)">
      <summary>指定されたフォーム フィールドの最初の検証エラー メッセージを含む HTML span 要素を返します。</summary>
      <returns>指定されたフィールドの値が有効である場合は null。それ以外の場合は、指定されたフィールドと関連付けられている検証エラー メッセージを表す HTML マークアップ。</returns>
      <param name="name">検証されたフォーム フィールドの名前。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>属性ディクショナリによって定義されている指定されたカスタム属性を持ち、指定されたフォーム フィールドの最初の検証エラー メッセージを含む、HTML span 要素を返します。</summary>
      <returns>指定されたフィールドの値が有効である場合は null。それ以外の場合は、指定されたフィールドと関連付けられている検証エラー メッセージを表す HTML マークアップ。</returns>
      <param name="name">検証されたフォーム フィールドの名前。</param>
      <param name="htmlAttributes">この要素のカスタム属性の名前と値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.Object)">
      <summary>属性オブジェクトによって定義されている指定されたカスタム属性を持ち、指定されたフォーム フィールドの最初の検証エラー メッセージを含む、HTML span 要素を返します。</summary>
      <returns>指定されたフィールドの値が有効である場合は null。それ以外の場合は、指定されたフィールドと関連付けられている検証エラー メッセージを表す HTML マークアップ。</returns>
      <param name="name">検証されたフォーム フィールドの名前。</param>
      <param name="htmlAttributes">この要素のカスタム属性を格納するオブジェクト。属性の名前と値は、オブジェクトのプロパティを調べることでリフレクションを介して取得されます。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.String)">
      <summary>指定されたフォーム フィールドの検証エラー メッセージを含む HTML span 要素を返します。</summary>
      <returns>指定されたフィールドの値が有効である場合は null。それ以外の場合は、指定されたフィールドと関連付けられている検証エラー メッセージを表す HTML マークアップ。</returns>
      <param name="name">検証されたフォーム フィールドの名前。</param>
      <param name="message">表示する検証エラー メッセージ。null の場合、指定されたフォーム フィールドと関連付けられている最初の検証エラー メッセージが表示されます。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>属性ディクショナリによって定義されている指定されたカスタム属性を持ち、指定されたフォーム フィールドの検証エラー メッセージを含む、HTML span 要素を返します。</summary>
      <returns>指定されたフィールドが有効である場合は null。それ以外の場合は、指定されたフィールドと関連付けられている検証エラー メッセージを表す HTML マークアップ。</returns>
      <param name="name">検証されたフォーム フィールドの名前。</param>
      <param name="message">表示する検証エラー メッセージ。null の場合、指定されたフォーム フィールドと関連付けられている最初の検証エラー メッセージが表示されます。</param>
      <param name="htmlAttributes"> この要素のカスタム属性の名前と値。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.String,System.Object)">
      <summary>属性オブジェクトによって定義されている指定されたカスタム属性を持ち、指定されたフォーム フィールドの検証エラー メッセージを含む、HTML span 要素を返します。</summary>
      <returns>指定されたフィールドが有効である場合は null。それ以外の場合は、指定されたフィールドと関連付けられている検証エラー メッセージを表す HTML マークアップ。</returns>
      <param name="name">検証されたフォーム フィールドの名前。</param>
      <param name="message">表示する検証エラー メッセージ。null の場合、指定されたフォーム フィールドと関連付けられている最初の検証エラー メッセージが表示されます。</param>
      <param name="htmlAttributes">この要素のカスタム属性を格納するオブジェクト。属性の名前と値は、オブジェクトのプロパティを調べることでリフレクションを介して取得されます。</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> が null または空です。</exception>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationMessageCssClassName">
      <summary>検証が失敗したときの検証エラー メッセージの外観を定義している CSS クラスの名前を取得または設定します。</summary>
      <returns>CSS クラスの名前。既定値は、field-validation-error です。</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationMessageValidCssClassName">
      <summary>検証が成功したときの検証エラー メッセージの外観を定義している CSS クラスの名前を取得または設定します。</summary>
      <returns>CSS クラスの名前。既定値は、field-validation-valid です。</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary">
      <summary>モデル状態ディクショナリからのすべての検証エラー メッセージの順序なしリストを含む HTML div 要素を返します。</summary>
      <returns>検証エラー メッセージを表す HTML マークアップ。</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.Boolean)">
      <summary>モデル状態ディクショナリからの検証エラー メッセージの順序なしリストを含み、オプションでフィールド レベルのエラーが除外された、HTML div 要素を返します。</summary>
      <returns>検証エラー メッセージを表す HTML マークアップ。</returns>
      <param name="excludeFieldErrors">フィールド レベルの検証エラー メッセージをリストから除外する場合は true、モデル レベルとフィールド レベルの両方の検証エラー メッセージを含める場合は false。</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>属性ディクショナリによって定義されている指定されたカスタム属性を持ち、モデル状態ディクショナリ内のすべての検証エラー メッセージの順序なしリストを含む、HTML div 要素を返します。</summary>
      <returns>検証エラー メッセージを表す HTML マークアップ。</returns>
      <param name="htmlAttributes">この要素のカスタム属性の名前と値。</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.Object)">
      <summary>属性オブジェクトによって定義されている指定されたカスタム属性を持ち、モデル状態ディクショナリ内のすべての検証エラー メッセージの順序なしリストを含む、HTML div 要素を返します。</summary>
      <returns>検証エラー メッセージを表す HTML マークアップ。</returns>
      <param name="htmlAttributes">この要素のカスタム属性を格納するオブジェクト。属性の名前と値は、オブジェクトのプロパティを調べることでリフレクションを介して取得されます。</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String)">
      <summary>概要メッセージと、モデル状態ディクショナリ内のすべての検証エラー メッセージの順序なしリストを含む、HTML div 要素を返します。</summary>
      <returns>検証エラー メッセージを表す HTML マークアップ。</returns>
      <param name="message">検証エラー メッセージのリストの前に来るメッセージ。</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>属性ディクショナリによって定義されている指定されたカスタム属性を持ち、概要メッセージと、モデル状態ディクショナリの検証エラー メッセージからオプションでフィールド レベル エラーが除外された順序なしリストを含む、HTML div 要素を返します。</summary>
      <returns>検証エラー メッセージを表す HTML マークアップ。</returns>
      <param name="message">検証エラー メッセージのリストの前に来る概要メッセージ。</param>
      <param name="excludeFieldErrors">フィールド レベルの検証エラー メッセージを結果から除外する場合は true、モデル レベルとフィールド レベルの両方の検証エラー メッセージを含める場合は false。</param>
      <param name="htmlAttributes">この要素のカスタム属性の名前と値。</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String,System.Boolean,System.Object)">
      <summary>属性オブジェクトによって定義されている指定されたカスタム属性を持ち、概要メッセージと、モデル状態ディクショナリの検証エラー メッセージからオプションでフィールド レベル エラーが除外された順序なしリストを含む、HTML div 要素を返します。</summary>
      <returns>検証エラー メッセージを表す HTML マークアップ。</returns>
      <param name="message">検証エラー メッセージのリストの前に来る概要メッセージ。</param>
      <param name="excludeFieldErrors">フィールド レベルの検証エラー メッセージを結果から除外する場合は true、フィールド レベルの検証エラー メッセージを含める場合は false。</param>
      <param name="htmlAttributes">この要素のカスタム属性を格納するオブジェクト。属性の名前と値は、オブジェクトのプロパティを調べることでリフレクションを介して取得されます。</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>属性ディクショナリによって定義されている指定されたカスタム属性を持ち、概要メッセージと、モデル状態ディクショナリのすべての検証エラー メッセージの順序なしリストを含む、HTML div 要素を返します。</summary>
      <returns>検証エラー メッセージを表す HTML マークアップ。</returns>
      <param name="message">検証エラー メッセージのリストの前に来るメッセージ。</param>
      <param name="htmlAttributes">この要素のカスタム属性の名前と値。</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String,System.Object)">
      <summary>属性オブジェクトによって定義されている指定されたカスタム属性を持ち、概要メッセージと、モデル状態ディクショナリのすべての検証エラー メッセージの順序なしリストを含む、HTML div 要素を返します。</summary>
      <returns>検証エラー メッセージを表す HTML マークアップ。</returns>
      <param name="message">検証エラー メッセージのリストの前に来る概要メッセージ。</param>
      <param name="htmlAttributes">この要素のカスタム属性を格納するオブジェクト。属性の名前と値は、オブジェクトのプロパティを調べることでリフレクションを介して取得されます。</param>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationSummaryClass">
      <summary>検証が失敗したときの検証の概要の外観を定義している CSS クラスの名前を取得または設定します。</summary>
      <returns>CSS クラスの名前。既定値は、validation-summary-errors です。</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationSummaryValidClass">
      <summary>検証が成功したときの検証の概要の外観を定義している CSS クラスの名前を取得または設定します。</summary>
      <returns>CSS クラスの名前。既定値は、validation-summary-valid です。</returns>
    </member>
    <member name="T:System.Web.WebPages.Html.ModelState">
      <summary>アクション メソッド引数のプロパティまたはアクション メソッド引数自体へのモデル バインドの状態をカプセル化します。</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelState.#ctor">
      <summary>
        <see cref="T:System.Web.WebPages.Html.ModelState" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelState.Errors">
      <summary>モデル バインド中に発生したエラーを格納している文字列のリストを返します。</summary>
      <returns>モデル バインド中に発生したエラー。</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelState.Value">
      <summary>モデル バインド中にバインドされた値をカプセル化するオブジェクトを返します。</summary>
      <returns>バインドされた値。</returns>
    </member>
    <member name="T:System.Web.WebPages.Html.ModelStateDictionary">
      <summary>検証ステータスや検証エラー メッセージなどの情報を含めて、アクション メソッドへポストされたフォームのバインドの結果を表します。</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.#ctor">
      <summary>
        <see cref="T:System.Web.WebPages.Html.ModelStateDictionary" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.#ctor(System.Web.WebPages.Html.ModelStateDictionary)">
      <summary>指定されたモデル状態ディクショナリからコピーされた値を使用して、<see cref="T:System.Web.WebPages.Html.ModelStateDictionary" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="dictionary">値のコピー元のモデル状態ディクショナリ。</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.WebPages.Html.ModelState})">
      <summary>指定された項目をモデル状態ディクショナリに追加します。</summary>
      <param name="item">モデル状態ディクショナリに追加する項目。</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Add(System.String,System.Web.WebPages.Html.ModelState)">
      <summary>指定されたキーと値を持つ項目をモデル状態ディクショナリに追加します。</summary>
      <param name="key">キー。</param>
      <param name="value">値。</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.AddError(System.String,System.String)">
      <summary>指定されたキーと関連付けられているモデル状態にエラー メッセージを追加します。</summary>
      <param name="key">エラー メッセージを追加するモデル状態と関連付けられているキー。</param>
      <param name="errorMessage">エラー メッセージ。</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.AddFormError(System.String)">
      <summary>フォーム全体と関連付けられているモデル状態にエラー メッセージを追加します。</summary>
      <param name="errorMessage">エラー メッセージ。</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Clear">
      <summary>モデル状態ディクショナリからすべての項目を削除します。</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.WebPages.Html.ModelState})">
      <summary>指定された項目がモデル状態ディクショナリに格納されているかどうかを判断します。</summary>
      <returns>指定された項目がモデル状態ディクショナリに格納されている場合は true。それ以外の場合は false。</returns>
      <param name="item">検索対象の項目。</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.ContainsKey(System.String)">
      <summary>指定されたキーがモデル状態ディクショナリに格納されているかどうかを判断します。</summary>
      <returns>指定されたキーがモデル状態ディクショナリに格納されている場合は true。それ以外の場合は指定されたキーがモデル状態ディクショナリに格納されている場合は false。</returns>
      <param name="key">検索対象のキー。</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.WebPages.Html.ModelState}[],System.Int32)">
      <summary>指定されたインデックスを開始位置として、モデル状態ディクショナリの要素を配列にコピーします。</summary>
      <param name="array">要素のコピー先である 1 次元の <see cref="T:System.Array" /> インスタンス。</param>
      <param name="arrayIndex">コピーの開始位置となる、<paramref name="array" /> 内のインデックス。</param>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.Count">
      <summary>モデル状態ディクショナリに含まれるモデル状態の数を取得します。</summary>
      <returns>モデル状態ディクショナリに含まれるモデル状態の数。</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.GetEnumerator">
      <summary>コレクションを反復処理するために使用できる列挙子を返します。</summary>
      <returns>コレクションの反復処理に使用できる列挙子。</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.IsReadOnly">
      <summary>モデル状態ディクショナリが読み取り専用かどうかを示す値を取得します。</summary>
      <returns>モデル状態ディクショナリが読み取り専用である場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.IsValid">
      <summary>モデル状態ディクショナリのいずれかのモデル状態と関連付けられているエラー メッセージがあるかどうかを示す値を取得します。</summary>
      <returns>ディクショナリ内のモデル状態と関連付けられているエラー メッセージが存在する場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.IsValidField(System.String)">
      <summary>エラー メッセージが指定されたキーに関連付けられているかどうかを判断します。</summary>
      <returns>指定されたキーに関連付けられているエラー メッセージがない場合、または指定されたキーが存在しない場合は true。それ以外の場合は false。</returns>
      <param name="key">キー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> が null です。</exception>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.Item(System.String)">
      <summary>モデル状態ディクショナリ内の指定されたキーに関連付けられているモデル状態を取得または設定します。</summary>
      <returns>ディクショナリ内の指定されたキーに関連付けられているモデル状態。</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.Keys">
      <summary>モデル状態ディクショナリ内のキーが格納されているリストを取得します。</summary>
      <returns>ディクショナリ内のキーのリスト。</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Merge(System.Web.WebPages.Html.ModelStateDictionary)">
      <summary>指定されたモデル状態ディクショナリからこの <see cref="T:System.Web.WebPages.Html.ModelStateDictionary" /> インスタンスに値をコピーし、キーが同じ場合は既存の値を上書きします。</summary>
      <param name="dictionary">値のコピー元のモデル状態ディクショナリ。</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.WebPages.Html.ModelState})">
      <summary>モデル状態ディクショナリから最初に見つかった指定の項目を削除します。</summary>
      <returns>項目がモデル状態ディクショナリから正常に削除された場合は true、項目が削除されなかった場合、または項目がモデル状態ディクショナリに存在しない場合は false。</returns>
      <param name="item">削除する項目。</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Remove(System.String)">
      <summary>指定されたキーを持つ項目をモデル状態ディクショナリから削除します。</summary>
      <returns>項目がモデル状態ディクショナリから正常に削除された場合は true、項目が削除されなかった場合、または項目がモデル状態ディクショナリに存在しない場合は false。</returns>
      <param name="key">削除する要素のキー。</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.SetModelValue(System.String,System.Object)">
      <summary>指定されたキーに関連付けられているモデル状態の値を設定します。</summary>
      <param name="key">値を設定するキー。</param>
      <param name="value">キーに設定する値。</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>モデル状態ディクショナリを反復処理するために使用できる列挙子を返します。</summary>
      <returns>モデル状態ディクショナリを反復処理するために使用できる列挙子。</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.TryGetValue(System.String,System.Web.WebPages.Html.ModelState@)">
      <summary>指定されたキーに関連付けられているモデル状態の値を取得します。</summary>
      <returns>指定されたキーを持つ要素がモデル状態ディクショナリに格納されている場合は true。それ以外の場合は false。</returns>
      <param name="key">値を取得するキー。</param>
      <param name="value">このメソッドが戻るときに、キーが見つかった場合は、指定されたキーに関連付けられているモデル状態の値が格納されます。それ以外の場合は、<see cref="T:System.Web.WebPages.Html.ModelState" /> 型に対する既定値が格納されます。このパラメーターは初期化せずに渡されます。</param>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.Values">
      <summary>モデル状態ディクショナリ内の値が格納されているリストを取得します。</summary>
      <returns>ディクショナリ内の値のリスト。</returns>
    </member>
    <member name="T:System.Web.WebPages.Html.SelectListItem">
      <summary>HTML 選択リスト内の項目を表します。</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.SelectListItem.#ctor">
      <summary>既定の設定を使用して、<see cref="T:System.Web.WebPages.Html.SelectListItem" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.SelectListItem.#ctor(System.Web.WebPages.Html.SelectListItem)">
      <summary>指定された選択リスト項目をコピーして、<see cref="T:System.Web.WebPages.Html.SelectListItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="item">コピーする選択リスト項目。</param>
    </member>
    <member name="P:System.Web.WebPages.Html.SelectListItem.Selected">
      <summary>
        <see cref="T:System.Web.WebPages.Html.SelectListItem" /> インスタンスが選択されているかどうかを示す値を取得または設定します。</summary>
      <returns>選択リスト項目が選択されている場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.SelectListItem.Text">
      <summary>Web ページ上で <see cref="T:System.Web.WebPages.Html.SelectListItem" /> インスタンスを表示するために使用するテキストを取得または設定します。</summary>
      <returns>選択リスト項目を表示するために使用するテキスト。</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.SelectListItem.Value">
      <summary>
        <see cref="T:System.Web.WebPages.Html.SelectListItem" /> インスタンスと関連づけられている HTML option 要素の HTML value 属性の値を取得または設定します。</summary>
      <returns>選択リスト項目と関連付けられている HTML value 属性の値。</returns>
    </member>
    <member name="T:System.Web.WebPages.Instrumentation.InstrumentationService">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。Web ページのインストルメンテーション サービスを表します。</summary>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.InstrumentationService.#ctor">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。<see cref="T:System.Web.WebPages.Instrumentation.InstrumentationService" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.InstrumentationService.BeginContext(System.Web.HttpContextBase,System.String,System.IO.TextWriter,System.Int32,System.Int32,System.Boolean)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。指定されたコンテキストの出力を表示する前に呼び出されます。</summary>
      <param name="context">コンテキスト。</param>
      <param name="virtualPath">仮想パス。</param>
      <param name="writer">ライター。</param>
      <param name="startPosition">開始位置。</param>
      <param name="length">コンテキストの長さ。</param>
      <param name="isLiteral">コンテキストがリテラルであるかどうかを判断します。</param>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.InstrumentationService.EndContext(System.Web.HttpContextBase,System.String,System.IO.TextWriter,System.Int32,System.Int32,System.Boolean)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。指定されたコンテキストの出力を表示した後に呼び出されます。</summary>
      <param name="context">コンテキスト。</param>
      <param name="virtualPath">仮想パス。</param>
      <param name="writer">ライター。</param>
      <param name="startPosition">開始位置。</param>
      <param name="length">コンテキストの長さ。</param>
      <param name="isLiteral">コンテキストがリテラルであるかどうかを判断します。</param>
    </member>
    <member name="P:System.Web.WebPages.Instrumentation.InstrumentationService.IsAvailable">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。サービスが使用可能かどうかを示す値を取得します。</summary>
      <returns>サービスが使用可能な場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:System.Web.WebPages.Instrumentation.PositionTagged`1">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。タグ付けされた位置を表します。</summary>
      <typeparam name="T">位置の型。</typeparam>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.#ctor(`0,System.Int32)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。<see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">この現在のインスタンスの値。</param>
      <param name="offset">オフセット。</param>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.Equals(System.Object)">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。指定されたオブジェクトが、現在のオブジェクトと等しいかどうかを判断します。</summary>
      <returns>指定されたオブジェクトが現在のオブジェクトと等しい場合は true。それ以外の場合は false。</returns>
      <param name="obj">比較するオブジェクト。</param>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.GetHashCode">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。現在のインスタンスのハッシュ コードを取得します。</summary>
      <returns>現在のインスタンスのハッシュ コード。</returns>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.op_Equality(System.Web.WebPages.Instrumentation.PositionTagged{`0},System.Web.WebPages.Instrumentation.PositionTagged{`0})">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。2 つのオブジェクトが等価であるかどうかを判断します。</summary>
      <returns>2 つのオブジェクトが等しい場合は true。それ以外の場合は false。</returns>
      <param name="left">最初のオブジェクト。</param>
      <param name="right">2 番目のオブジェクト。</param>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.op_Implicit(System.Tuple{`0,System.Int32})~System.Web.WebPages.Instrumentation.PositionTagged{`0}">
      <summary>指定されたオブジェクトを <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" /> オブジェクトに変換します。</summary>
      <returns>変換された <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" /> を表す <paramref name="value" />。</returns>
      <param name="value">変換するオブジェクト。</param>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.op_Implicit(System.Web.WebPages.Instrumentation.PositionTagged{`0})~`0">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。<paramref name="value" /> を <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" /> オブジェクトに変換します。</summary>
      <returns>変換された <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" /> を表す <paramref name="value" />。</returns>
      <param name="value">変換するオブジェクト。</param>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.op_Inequality(System.Web.WebPages.Instrumentation.PositionTagged{`0},System.Web.WebPages.Instrumentation.PositionTagged{`0})">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。2 つのオブジェクトが等しくないかどうかを判断します。</summary>
      <returns>2 つのオブジェクトが等しくない場合は true。それ以外の場合は false。</returns>
      <param name="left">最初のオブジェクト。</param>
      <param name="right">2 番目のオブジェクト。</param>
    </member>
    <member name="P:System.Web.WebPages.Instrumentation.PositionTagged`1.Position">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。<see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" /> に関連付けられている位置を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" /> に関連付けられている位置。</returns>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.ToString">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。<see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" /> オブジェクトの文字列表現を返します。</summary>
      <returns>
        <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" /> オブジェクトを表す文字列。</returns>
    </member>
    <member name="P:System.Web.WebPages.Instrumentation.PositionTagged`1.Value">
      <summary>この型/メンバーは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。現在のインスタンスの値を取得または設定します。</summary>
      <returns>現在のインスタンスの値。</returns>
    </member>
    <member name="T:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider">
      <summary>ASP.NET 要求スコープ ストレージ プロバイダーを定義します。</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider.#ctor">
      <summary>
        <see cref="T:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider.ApplicationScope">
      <summary>アプリケーション スコープのデータを格納するディクショナリを取得します。</summary>
      <returns>アプリケーション スコープのデータを格納するディクショナリ。</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider.CurrentScope">
      <summary>現在のスコープのデータを格納するディクショナリを取得または設定します。</summary>
      <returns>現在のスコープのデータを格納するディクショナリ。</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider.GlobalScope">
      <summary>グローバル スコープのデータを格納するディクショナリを取得します。</summary>
      <returns>グローバル スコープのデータを格納するディクショナリ。</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider.RequestScope">
      <summary>要求スコープのデータを格納するディクショナリを取得します。</summary>
      <returns>要求スコープのデータを格納するディクショナリ。</returns>
    </member>
    <member name="T:System.Web.WebPages.Scope.IScopeStorageProvider">
      <summary>データへのスコープを指定されたアクセスを提供するディクショナリを定義します。</summary>
    </member>
    <member name="P:System.Web.WebPages.Scope.IScopeStorageProvider.CurrentScope">
      <summary>現在のスコープにデータを格納するために使用されるディクショナリを取得および設定します。</summary>
      <returns>現在のスコープのデータを格納するディクショナリ。</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.IScopeStorageProvider.GlobalScope">
      <summary>グローバル スコープでデータを格納するために使用されるディクショナリを取得します。</summary>
      <returns>グローバル スコープのデータを格納するディクショナリ。</returns>
    </member>
    <member name="T:System.Web.WebPages.Scope.ScopeStorage">
      <summary>一時スコープ用のストレージの格納に使用されるクラスを定義します。</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorage.CreateTransientScope">
      <summary>
        <see cref="P:System.Web.WebPages.Scope.ScopeStorage.CurrentScope" /> プロパティのスコープに基づいて、一時スコープにデータを格納するために使用されるディクショナリを返します。</summary>
      <returns>一時スコープのデータを格納するディクショナリ。</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorage.CreateTransientScope(System.Collections.Generic.IDictionary{System.Object,System.Object})">
      <summary>一時スコープでデータを格納するために使用されるディクショナリを返します。</summary>
      <returns>一時スコープのデータを格納するディクショナリ。</returns>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorage.CurrentProvider">
      <summary>現在のスコープ プロバイダーを取得または設定します。</summary>
      <returns>現在のスコープ プロバイダー。</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorage.CurrentScope">
      <summary>現在のスコープにデータを格納するために使用されるディクショナリを取得します。</summary>
      <returns>現在のスコープのデータを格納するディクショナリ。</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorage.GlobalScope">
      <summary>グローバル スコープでデータを格納するために使用されるディクショナリを取得します。</summary>
      <returns>グローバル スコープのデータを格納するディクショナリ。</returns>
    </member>
    <member name="T:System.Web.WebPages.Scope.ScopeStorageDictionary">
      <summary>異なるスコープ レベル (ローカル、グローバルなど) でのデータ格納に使用されるキーと値のコレクションを表します。</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.#ctor">
      <summary>
        <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.#ctor(System.Collections.Generic.IDictionary{System.Object,System.Object})">
      <summary>指定された基本スコープを使用して、<see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="baseScope">基本スコープ。</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Add(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
      <summary>指定されたジェネリック コレクションを使用して、<see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> オブジェクトにキーと値のペアを追加します。</summary>
      <param name="item">キーと値のペア。</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Add(System.Object,System.Object)">
      <summary>指定されたキーと値を<see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> オブジェクトに追加します。</summary>
      <param name="key">キー。</param>
      <param name="value">値。</param>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BackingStore">
      <summary>
        <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> オブジェクトのデータを格納するディクショナリを取得します。</summary>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope">
      <summary>
        <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> オブジェクトの基本スコープを取得します。</summary>
      <returns>
        <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> オブジェクトの基本スコープ。</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Clear">
      <summary>連結された <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> と <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> オブジェクトからすべてのキーと値を削除します。</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
      <summary>指定されたキーと値のペアが <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> オブジェクトまたは <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> オブジェクトのいずれかに存在するかどうかを示す値を返します。</summary>
      <returns>
        <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> オブジェクトまたは <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> オブジェクトに指定されたキーと値のペアを持つ要素が含まれる場合は true。それ以外の場合は false。</returns>
      <param name="item">キーと値のペア。</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.ContainsKey(System.Object)">
      <summary>指定されたキーが <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> オブジェクトまたは <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> オブジェクトに存在するかどうかを示す値を返します。</summary>
      <returns>
        <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> オブジェクトまたは <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> オブジェクトに指定されたキーを持つ要素が含まれる場合は true。それ以外の場合は false。</returns>
      <param name="key">キー。</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Object,System.Object}[],System.Int32)">
      <summary>
        <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> オブジェクトおよび <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> オブジェクトのすべての要素を、指定されたインデックスを開始位置として <see cref="T:System.Array" /> オブジェクトにコピーします。</summary>
      <param name="array">配列。</param>
      <param name="arrayIndex">
        <paramref name="array" /> 内の 0 から始まるインデックス。</param>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.Count">
      <summary>連結された <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> および <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> オブジェクトに含まれるキーと値のペアの数を取得します。</summary>
      <returns>キーと値のペアの数。</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.GetEnumerator">
      <summary>連結された <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> および <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> オブジェクトを反復処理するために使用できる列挙子を返します。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.GetItems">
      <summary>連結された <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> および <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> オブジェクトの個別の要素を反復処理するために使用できる列挙子を返します。</summary>
      <returns>連結されたディクショナリ オブジェクトの個別の要素を含む列挙子。</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.IsReadOnly">
      <summary>
        <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> オブジェクトが読み取り専用かどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> オブジェクトが読み取り専用である場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.Item(System.Object)">
      <summary>指定されたキーに関連付けられている要素を取得または設定します。</summary>
      <returns>指定されたキーを持つ要素。</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.Keys">
      <summary>連結された <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> および <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> オブジェクトのキーを格納している <see cref="T:System.Collections.Generic.List`1" /> オブジェクトを取得します。</summary>
      <returns>キーを格納しているオブジェクト。</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Remove(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
      <summary>連結された <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> および <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> オブジェクトから、指定されたキーと値のペアを削除します。</summary>
      <returns>キーと値のペアが削除された場合は true。連結された <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> と <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> オブジェクトに <paramref name="item" /> が見つからない場合は false。</returns>
      <param name="item">キーと値のペア。</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Remove(System.Object)">
      <summary>連結された <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> および <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> オブジェクトから、指定されたキーを持つ値を削除します。</summary>
      <returns>キーと値のペアが削除された場合は true。連結された <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> と <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> オブジェクトに <paramref name="key" /> が見つからない場合は false。</returns>
      <param name="key">キー。</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.SetValue(System.Object,System.Object)">
      <summary>連結された <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> および <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> オブジェクトに、指定されたキーを使用して値を設定します。</summary>
      <param name="key">キー。</param>
      <param name="value">値。</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>連結された <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> および <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> オブジェクトの列挙子を返します。</summary>
      <returns>列挙子。</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.TryGetValue(System.Object,System.Object@)">
      <summary>連結された <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> および <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> オブジェクトから、指定されたキーに関連付けられている値を取得します。</summary>
      <returns>連結された <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> および <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> オブジェクトに指定されたキーを持つ要素が含まれる場合は true。それ以外の場合は false。</returns>
      <param name="key">キー。</param>
      <param name="value">このメソッドが戻るときに、キーが見つかった場合は、指定されたキーに関連付けられている値が格納されます。それ以外の場合は、<paramref name="value" /> パラメーターの型に対する既定値が格納されます。このパラメーターは初期化せずに渡されます。</param>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.Values">
      <summary>連結された <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> および <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> オブジェクトの値を格納している <see cref="T:System.Collections.Generic.List`1" /> オブジェクトを取得します。</summary>
      <returns>値を格納しているオブジェクト。</returns>
    </member>
    <member name="T:System.Web.WebPages.Scope.StaticScopeStorageProvider">
      <summary>静的データへのスコープ指定アクセスを提供します。</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.StaticScopeStorageProvider.#ctor">
      <summary>
        <see cref="T:System.Web.WebPages.Scope.StaticScopeStorageProvider" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Web.WebPages.Scope.StaticScopeStorageProvider.CurrentScope">
      <summary>静的コンテキストに現在のデータを格納するディクショナリを取得または設定します。</summary>
      <returns>現在のスコープを指定されたデータを提供するディクショナリ。</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.StaticScopeStorageProvider.GlobalScope">
      <summary>静的コンテキストにグローバル データを格納するディクショナリを取得します。</summary>
      <returns>グローバル スコープを指定されたデータを提供するディクショナリ。</returns>
    </member>
  </members>
</doc>